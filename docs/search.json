[
  {
    "objectID": "ifcb-data-wrangle.html",
    "href": "ifcb-data-wrangle.html",
    "title": "ifcb-port aransas",
    "section": "",
    "text": "Code\n# | warning: false\n# | message: false\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(patchwork)\nlibrary(svglite)\nlibrary(scales)\n\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\nCode\nlibrary(treemapify)\nlibrary(compositions); library(vegan)\n\n\nWelcome to compositions, a package for compositional data analysis.\nFind an intro with \"? compositions\"\n\n\nAttaching package: 'compositions'\n\nThe following objects are masked from 'package:stats':\n\n    anova, cor, cov, dist, var\n\nThe following object is masked from 'package:graphics':\n\n    segments\n\nThe following objects are masked from 'package:base':\n\n    %*%, norm, scale, scale.default\n\nLoading required package: permute\nLoading required package: lattice"
  },
  {
    "objectID": "ifcb-data-wrangle.html#combine-carbon-and-cell-counts",
    "href": "ifcb-data-wrangle.html#combine-carbon-and-cell-counts",
    "title": "ifcb-port aransas",
    "section": "2.1 Combine carbon and cell counts",
    "text": "2.1 Combine carbon and cell counts\n\n\nCode\ncombined_gom_long &lt;- carbon_long_wtax %&gt;% \n  left_join(counts_long_wtax)\n\n\nJoining with `by = join_by(DAY, DATE, MONTH, HOUR, CELL_ID,\nCOURSE_CLASSIFICATION, TYPE, Domain, Supergroup, Phylum, Class, Order, Family,\nGenus, Species)`\n\n\nTypes of classifications in dataset.\n\n\nCode\ntable(combined_gom_long$COURSE_CLASSIFICATION)\n\n\n\n      Bacteria   Biol unknown  Cyanobacteria    IFCB excess         Larvae \n         23128         470682          54241         247756           2200 \nMicroeukaryote \n       4193189 \n\n\nCode\ntable(combined_gom_long$TYPE)\n\n\n\nBiol unknown         Cell    Cell type     Non-biol \n      336583      3876186       599772       178655 \n\n\nCode\n# glimpse(combined_gom_long)\n# table(combined_gom_long$COURSE_CLASSIFICATION)\n\n\n\nWhat is the range of cellular carbon for each cell ID?\n\nThere are 130 entries.\n\n\nCode\nlength(unique(combined_gom_long$CELL_ID))\n\n\n[1] 130\n\n\nCode\nunique(combined_gom_long$Phylum)\n\n\n [1] \"Dinoflagellate\" \"Cyanobacteria\"  \"Ochrophyta\"     \"\"              \n [5] \"Haptophyta\"     \"Cnidaria\"       \"Cercozoa\"       \"Euglenozoa\"    \n [9] \"Ciliophora\"     \"Chlorophyta\"    \"Cryptophyta\"    \"Retaria\"       \n[13] \"Charophyta\"    \n\n\n\n\nCode\nrm &lt;- c(\"IFCB excess\", \"Larvae\")\n# hist(combined_gom_long$CARBON)\ncombined_gom_long %&gt;% \n  # filter(!(COURSE_CLASSIFICATION %in% rm)) %&gt;% \n  filter(COURSE_CLASSIFICATION == \"Microeukaryote\") %&gt;%\n  # filter(Supergroup == \"Alveolata\") %&gt;% \n  ggplot(aes(x = CELL_ID, y = CARBON, fill = Phylum)) +\n  geom_violin() +\n  facet_grid(cols = vars(Phylum), scales = \"free_x\", space = \"free_x\") +\n  # facet_wrap(vars(Phylum), scales = \"free\", as.table = FALSE) +\n  theme_classic() +\n  scale_y_log10() +\n  labs(x = \"\", y = bquote(\"pg C\"~cell^-1)) +\n  theme(legend.position = \"bottom\", legend.title = element_blank(),\n        strip.text.y = element_text(color = \"black\", face = \"bold\", size = 14),\n        strip.background = element_blank(),\n        strip.placement = \"outside\",\n        axis.text.x = element_text(color = \"black\", size = 10, angle = 45, vjust = 1, hjust = 1),\n        axis.title = element_text(color = \"black\", size = 10),\n        axis.text.y = element_text(color = \"black\", size = 10),\n        panel.grid.major = element_line(color = \"#d9d9d9\", linewidth = 0.2))\n\n\n\n\n\n\n\n\n\nCode\n# ?facet_wrap()"
  },
  {
    "objectID": "ifcb-data-wrangle.html#add-seasons",
    "href": "ifcb-data-wrangle.html#add-seasons",
    "title": "ifcb-port aransas",
    "section": "2.2 Add seasons",
    "text": "2.2 Add seasons\nMake data frames to assign season\nSpring = March 1 - May 31 Summer = June 1 - Aug 31 Fall = Sept 1 - Nov 30 Winter = Dec 1 - Feb (March 1 (-1))\nMake a new dataframe to just add seasons (manually) to the date. I’m subsetting to 2024 to include leap day years.\n\n\nCode\ndf_season &lt;- counts %&gt;% \n  pivot_longer(cols = -c(DAY, DATE, MONTH, HOUR), names_to = \"CELL_ID\", values_to = \"COUNT\") %&gt;%\n  mutate(DATA_GAP = case_when(\n    is.na(COUNT) ~ \"Missing\",\n    TRUE ~ \"Not missing\"\n  )) |&gt; \n  mutate(date_tmp =  as.Date(format(DAY, '2024-%m-%d')), \n        SEASON = case_when(between(date_tmp, ymd('2024-03-01'), ymd('2024-05-31')) ~ \"Spring\",\n                           between(date_tmp, ymd('2024-06-01'), ymd('2024-08-31')) ~ \"Summer\", \n                           between(date_tmp, ymd('2024-09-01'), ymd('2024-11-30')) ~ \"Fall\", \n                           TRUE ~ \"Winter\")) %&gt;% # Winter needs to be \"else\" because you can't select between.\n  select(DAY, date_tmp, SEASON, DATA_GAP) |&gt; distinct() |&gt; \n  mutate(YEAR = year(DAY),\n         MONTH = month(DAY),\n         DATE = day(DAY),\n         HOUR = hour(DAY)) |&gt; \n  group_by(SEASON) |&gt; \n  mutate(month_start_tmp = case_when(\n    SEASON == \"Winter\" ~ max(MONTH),\n    TRUE ~ min(MONTH)),\n    year_start_tmp = case_when(SEASON == \"Winter\" ~ YEAR - 1,\n                               TRUE ~ YEAR),\n    ) |&gt; \n  mutate(month_end_tmp = case_when(\n    SEASON == \"Winter\" ~ 2,\n    TRUE ~ max(MONTH))) |&gt; \n  group_by(SEASON, MONTH) |&gt; \n  mutate(day_start_tmp = min(day(DAY)),\n         day_end_tmp = case_when(\n           (SEASON == \"Winter\" & leap_year(YEAR) == TRUE) ~ 29,\n           (SEASON == \"Winter\" & leap_year(YEAR) == FALSE) ~ 28,\n           (SEASON == \"Summer\" | SEASON == \"Spring\") ~ 31,\n           SEASON == \"Fall\" ~ 30\n         )) |&gt; \n  ungroup() |&gt; \n  unite(\"start\", year_start_tmp, month_start_tmp, day_start_tmp, sep = \"-\", remove = FALSE) |&gt; \n  unite(\"end\", YEAR, month_end_tmp, day_end_tmp, sep = \"-\", remove = FALSE) |&gt; \n  mutate(START = ymd(start),\n         END = ymd(end),\n         START_noy = mdy(paste(month(START), day(START), \"2024\", sep = \"-\")),\n         END_noy = mdy(paste(month(END), day(END), \"2024\", sep = \"-\"))) |&gt; \n  select(DAY, DATE, MONTH, YEAR, HOUR, SEASON, START, END, START_noy, END_noy) |&gt; distinct()\n\n# head(df_season)\n# View(df_season |&gt; select(SEASON, START, END) |&gt; distinct())\ndf_oneyear &lt;- df_season |&gt; \n  mutate(DATE = mdy(paste(month(DAY), day(DAY), \"2024\", sep = \"-\"))) |&gt; \n  select(SEASON, START_noy, END_noy, DATE) |&gt; \n  # filter(!(SEASON == \"Winter\" & (month(START_noy) == 12))) |&gt; \n  distinct()\n# head(df_oneyear)\n\n\nTest seasonal plot\n\n\nCode\n# Plot multiple years\nggplot(df_season, aes(x = as_date(DAY))) +\n  geom_rect(data = (filter(df_season, SEASON == \"Fall\")), alpha = 0.2, fill = \"#cc5500\",\n            aes(xmin = START, xmax = END, ymin = 0, ymax = 10000)) +\n  geom_rect(data = (filter(df_season, SEASON == \"Spring\")), alpha = 0.2, fill = \"#bccbae\",\n            aes(xmin = START, xmax = END, ymin = 0, ymax = 10000)) +\n  geom_rect(data = (filter(df_season, SEASON == \"Summer\")), alpha = 0.2, fill = \"#ffbf00\",\n            aes(xmin = START, xmax = END, ymin = 0, ymax = 10000)) +\n  geom_rect(data = (filter(df_season, SEASON == \"Winter\")), alpha = 0.2, fill = \"#5d4e62\",\n            aes(xmin = START, xmax = END, ymin = 0, ymax = 10000))\n\n\n\n\n\n\n\n\n\nCode\n# Plot one year\nggplot(df_oneyear, aes(x = as_date(DATE))) +\n  geom_rect(data = (filter(df_oneyear, SEASON == \"Fall\")), alpha = 0.2, fill = \"#cc5500\",\n            aes(xmin = START_noy, xmax = END_noy, ymin = 0, ymax = 10000)) +\n  geom_rect(data = (filter(df_oneyear, SEASON == \"Spring\")), alpha = 0.2, fill = \"#bccbae\",\n            aes(xmin = START_noy, xmax = END_noy, ymin = 0, ymax = 10000)) +\n  geom_rect(data = (filter(df_oneyear, SEASON == \"Summer\")), alpha = 0.2, fill = \"#ffbf00\",\n            aes(xmin = START_noy, xmax = END_noy, ymin = 0, ymax = 10000)) +\n  geom_rect(data = (filter(df_oneyear, SEASON == \"Winter\")), alpha = 0.2, fill = \"#5d4e62\",\n            aes(xmin = as_date(\"2024-01-01\"), xmax = END_noy, ymin = 0, ymax = 10000)) +\n  geom_rect(data = (filter(df_oneyear, SEASON == \"Winter\")), alpha = 0.2, fill = \"#5d4e62\",\n            aes(xmin = START_noy, xmax = as_date(\"2024-12-31\"), ymin = 0, ymax = 10000))\n\n\n\n\n\n\n\n\n\nCombine with existing data frame.\n\n\nCode\ncombined_gom_long_season &lt;- combined_gom_long %&gt;% \n  left_join(df_season %&gt;% select(DAY, SEASON, START, END)) %&gt;%\n  mutate(day_noyear = paste(MONTH, day(DAY), \"2024\", sep = \"-\")) |&gt; \n  mutate(DAY_NOYEAR = mdy(day_noyear)) |&gt; select(-day_noyear)\n\n\nJoining with `by = join_by(DAY)`\n\n\nCode\n# unique(df_season$SEASON)\n# unique(combined_gom_long_season$SEASON)\n\n\n\n\nCode\n# head()\n# save(combined_gom_long, combined_gom_long_season, df_season, file = \"output-data/ifcb-data-04142025.RData\") #"
  },
  {
    "objectID": "ifcb-data-wrangle.html#data-checkpoint-option-here",
    "href": "ifcb-data-wrangle.html#data-checkpoint-option-here",
    "title": "ifcb-port aransas",
    "section": "2.3 Data checkpoint option here",
    "text": "2.3 Data checkpoint option here\n\n\nCode\n# load(file = \"output-data/ifcb-data-04142025.RData\", verbose = TRUE)"
  },
  {
    "objectID": "ifcb-data-wrangle.html#temperature-salinity",
    "href": "ifcb-data-wrangle.html#temperature-salinity",
    "title": "ifcb-port aransas",
    "section": "3.1 Temperature & Salinity",
    "text": "3.1 Temperature & Salinity\nImport from TABS D manual pull of data.\n\n\nCode\ntabs_d &lt;- read_delim(file = \"input-data/TABS_D/tabs_D_salt.asc\",\n                     col_names = FALSE, delim = \" \")\n\n\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat &lt;- vroom(...)\n  problems(dat)\n\n\nRows: 174802 Columns: 14\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \" \"\nchr  (2): X1, X14\ndbl  (4): X4, X7, X9, X11\nlgl  (7): X3, X5, X6, X8, X10, X12, X13\ntime (1): X2\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nhead(tabs_d)\n\n\n# A tibble: 6 × 14\n  X1     X2    X3       X4 X5    X6       X7 X8       X9 X10     X11 X12   X13  \n  &lt;chr&gt;  &lt;tim&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;lgl&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;lgl&gt; &lt;dbl&gt; &lt;lgl&gt; &lt;lgl&gt;\n1 10/15… 08:00 NA     26.1 NA    NA     4.93 NA     31.5 NA        0 NA    NA   \n2 10/15… 08:30 NA     26.1 NA    NA     4.93 NA     31.5 NA        0 NA    NA   \n3 10/15… 09:00 NA     26.1 NA    NA     4.93 NA     31.5 NA        0 NA    NA   \n4 10/15… 09:30 NA     25.8 NA    NA     4.87 NA     31.2 NA        0 NA    NA   \n5 10/15… 10:00 NA     25.9 NA    NA     4.87 NA     31.2 NA        0 NA    NA   \n6 10/15… 10:30 NA     25.9 NA    NA     4.87 NA     31.1 NA        0 NA    NA   \n# ℹ 1 more variable: X14 &lt;chr&gt;\n\n\nCode\n# ?read_delim()\n\ntabs_d_qc &lt;- tabs_d %&gt;%\n  select(date = X1, time = X2, temp = X4, sal = X9)\nhead(tabs_d_qc)\n\n\n# A tibble: 6 × 4\n  date       time    temp   sal\n  &lt;chr&gt;      &lt;time&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 10/15/2010 08:00   26.1  31.5\n2 10/15/2010 08:30   26.1  31.5\n3 10/15/2010 09:00   26.1  31.5\n4 10/15/2010 09:30   25.8  31.2\n5 10/15/2010 10:00   25.9  31.2\n6 10/15/2010 10:30   25.9  31.1\n\n\nCode\ntabs_temp_sal_2010 &lt;- tabs_d_qc %&gt;% \n  mutate(DATE = mdy(date),\n         MONTH = month(DATE),\n         DAY = day(DATE),\n         HOUR = hour(hms(time)),\n         MIN = minute(hms(time))) %&gt;% \n  select(DATE, MONTH, DAY, HOUR, MIN, TEMP = temp, SAL = sal) %&gt;% \n  filter(as_date(DATE) &lt;= as_date(\"2017-08-24\")) %&gt;% \n  add_column(NOTES = \"temp and salinity from TABS D data water property data\")\n\nrange(tabs_temp_sal_2010$DATE)\n\n\n[1] \"2010-10-15\" \"2017-08-24\"\n\n\nWater Property Data (from TABS website).\nDate | Time | WaterT |Conduct| Salt | Chloro |Crude Oil| Fuel Oil| WaterT | | (UTC) | (°C) | | | | | | (°C) | ==========+========+========+=======+=======+=========+=========+=========+=========+ 04/14/2025 00:00:00 21.65 47.54 33.37 0.00 0.00 04/14/2025 00:30:00 21.60 47.54 33.40 0.00 0.00 04/14/2025 01:00:00 21.64 47.58 33.40 0.00 0.00\nAbove data from TABs starts in 2010. Import other TABS data that has earlier temperature values. Column headers are: | (UTC) | (cm/s)| (cm/s)| (cm/s)| (0T) | (0C) |\n\n\nCode\ntabs_temp_vel &lt;- read_delim(\"input-data/TABS_D/TABS_D_vel_2007-2016.txt\", skip = 3, delim = \"\\t\", col_names = FALSE)\n\n\nRows: 126912 Columns: 1\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (1): X1\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nhead(tabs_temp_vel)\n\n\n# A tibble: 6 × 1\n  X1                                                              \n  &lt;chr&gt;                                                           \n1 09/01/2007 00:00:00   -16.63    -1.65    16.71    264.3     30.4\n2 09/01/2007 00:30:00   -14.49    -0.21    14.49    269.2     30.5\n3 09/01/2007 01:00:00   -13.10    -1.97    13.25    261.4     30.5\n4 09/01/2007 01:30:00   -17.10    -1.29    17.15    265.7     30.4\n5 09/01/2007 02:00:00   -19.66     1.23    19.70    273.6     30.4\n6 09/01/2007 02:30:00   -15.26    -2.47    15.46    260.8     30.4\n\n\nCode\n# ?read_delim()\ntemp_tabs &lt;- tabs_temp_vel %&gt;% \n  separate(X1, c(\"date\", \"time\", \"cm\", \"cm2\", \"cm3\", \"temp\"), sep = \"   \") %&gt;% \n  mutate(DATE_TIME = str_trim(date), TEMP = str_trim(temp)) %&gt;% \n  select(DATE_TIME, TEMP) %&gt;% distinct() %&gt;%  \n  mutate(whole_date = mdy_hms(DATE_TIME),\n         MONTH = month(whole_date),\n         DAY = day(whole_date),\n         DATE = date(whole_date),\n         HOUR = hour(whole_date),\n         MIN = minute(whole_date)) %&gt;% \n  select(DATE, MONTH, DAY, HOUR, MIN, TEMP) %&gt;% \n  filter(as_date(DATE) &gt;= as_date(\"2008-01-01\") & \n           as_date(DATE) &lt;= as_date(\"2010-10-15\")) %&gt;% \n  add_column(SAL = NA) %&gt;% \n  add_column(NOTES = \"temp from TABS D water vel data\")\n\n\nWarning: Expected 6 pieces. Additional pieces discarded in 1716 rows [341, 381, 385,\n1103, 1104, 1111, 1131, 1145, 2240, 2463, 2464, 2476, 2501, 2512, 2513, 2523,\n2550, 2647, 2648, 2660, ...].\n\n\nWarning: Expected 6 pieces. Missing pieces filled with `NA` in 10783 rows [16778, 50149,\n107820, 107821, 107822, 107823, 110893, 110894, 110895, 110896, 110903, 110904,\n110905, 110906, 110907, 110908, 110909, 110910, 110911, 110912, ...].\n\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `whole_date = mdy_hms(DATE_TIME)`.\nCaused by warning:\n!  2 failed to parse.\n\n\nCode\nhead(temp_tabs)\n\n\n# A tibble: 6 × 8\n  DATE       MONTH   DAY  HOUR   MIN TEMP  SAL   NOTES                          \n  &lt;date&gt;     &lt;dbl&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;chr&gt; &lt;lgl&gt; &lt;chr&gt;                          \n1 2008-01-01     1     1     0     0 16.2  NA    temp from TABS D water vel data\n2 2008-01-01     1     1     0    30 16.3  NA    temp from TABS D water vel data\n3 2008-01-01     1     1     1     0 16.3  NA    temp from TABS D water vel data\n4 2008-01-01     1     1     1    30 16.3  NA    temp from TABS D water vel data\n5 2008-01-01     1     1     2     0 16.2  NA    temp from TABS D water vel data\n6 2008-01-01     1     1     2    30 16.1  NA    temp from TABS D water vel data\n\n\nCombine all temperature data and some salinity data.\n\n\nCode\ntemp_sal_tabs &lt;- rbind(temp_tabs, tabs_temp_sal_2010)\nhead(temp_sal_tabs)\n\n\n# A tibble: 6 × 8\n  DATE       MONTH   DAY  HOUR   MIN TEMP    SAL NOTES                          \n  &lt;date&gt;     &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;                          \n1 2008-01-01     1     1     0     0 16.2     NA temp from TABS D water vel data\n2 2008-01-01     1     1     0    30 16.3     NA temp from TABS D water vel data\n3 2008-01-01     1     1     1     0 16.3     NA temp from TABS D water vel data\n4 2008-01-01     1     1     1    30 16.3     NA temp from TABS D water vel data\n5 2008-01-01     1     1     2     0 16.2     NA temp from TABS D water vel data\n6 2008-01-01     1     1     2    30 16.1     NA temp from TABS D water vel data\n\n\nCode\nrange(temp_sal_tabs$DATE)\n\n\n[1] \"2008-01-01\" \"2017-08-24\"\n\n\nImport other salinity data from Siddarth\n\n\nCode\n# temp_sal &lt;- read.csv(\"input-data/NOAA_NERRS\")\n# head(temp_sal)"
  },
  {
    "objectID": "ifcb-data-wrangle.html#river-height-gauge",
    "href": "ifcb-data-wrangle.html#river-height-gauge",
    "title": "ifcb-port aransas",
    "section": "3.2 River height gauge",
    "text": "3.2 River height gauge\nRun metadata-retrival/USGS pulling data.R\n\n\nCode\nusgs_clean &lt;- read.csv(\"input-data/usgs_07374000_cleaned.csv\")\nhead(usgs_clean)\n\n\n  agency_cd site_no       date water_temp_C water_temp_code discharge_cfs\n1      USGS 7374000 2007-01-01          9.8               A        431000\n2      USGS 7374000 2007-01-02          9.6               A        458000\n3      USGS 7374000 2007-01-03          9.2               A        499000\n4      USGS 7374000 2007-01-04          9.1               A        540000\n5      USGS 7374000 2007-01-05          9.4               A        585000\n6      USGS 7374000 2007-01-06          9.3               A        605000\n  discharge_code gage_height_ft gage_height_code conductivity_uScm\n1              A          17.32                A               376\n2              A          18.64                A               358\n3              A          20.61                A               363\n4              A          22.43                A               377\n5              A          24.30                A               360\n6              A          25.07                A               345\n  conductivity_code dissolved_oxygen_mgL dissolved_oxygen_code turbidity_ntu\n1                 A                   NA                  &lt;NA&gt;           0.2\n2                 A                   NA                  &lt;NA&gt;           0.2\n3                 A                   NA                  &lt;NA&gt;           0.2\n4                 A                 10.5                     A           0.2\n5                 A                 10.4                     A           0.2\n6                 A                 10.4                     A           0.2\n  turbidity_code salinity_psu salinity_code pH pH_code\n1              A           NA          &lt;NA&gt; NA    &lt;NA&gt;\n2              A           NA          &lt;NA&gt; NA    &lt;NA&gt;\n3              A           NA          &lt;NA&gt; NA    &lt;NA&gt;\n4              A           NA          &lt;NA&gt; NA    &lt;NA&gt;\n5              A           NA          &lt;NA&gt; NA    &lt;NA&gt;\n6              A           NA          &lt;NA&gt; NA    &lt;NA&gt;\n\n\nCode\n# hist(usgs_clean$gage_height_ft)\n\n# ggplot(usgs_clean, aes(x = date, y = gage_height_ft)) +\n# geom_bar(stat = \"identity\")\n\n\nClean up output and set up lubridate.\n\n\nCode\ndischarge_ft &lt;- usgs_clean %&gt;% \n  select(date, gage_height_ft) %&gt;% \n  mutate(DATE = ymd(date),\n         MONTH = month(DATE),\n         DAY = day(DATE)) %&gt;% \n  select(-date)\nhead(discharge_ft)\n\n\n  gage_height_ft       DATE MONTH DAY\n1          17.32 2007-01-01     1   1\n2          18.64 2007-01-02     1   2\n3          20.61 2007-01-03     1   3\n4          22.43 2007-01-04     1   4\n5          24.30 2007-01-05     1   5\n6          25.07 2007-01-06     1   6\n\n\nAdd water gauge height to temperature and salinity data\n\n\nCode\ntemp_sal_tabs_gauge &lt;- temp_sal_tabs %&gt;% \n  left_join(discharge_ft)\n\n\nJoining with `by = join_by(DATE, MONTH, DAY)`\n\n\nCode\nhead(temp_sal_tabs_gauge)\n\n\n# A tibble: 6 × 9\n  DATE       MONTH   DAY  HOUR   MIN TEMP    SAL NOTES            gage_height_ft\n  &lt;date&gt;     &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt;\n1 2008-01-01     1     1     0     0 16.2     NA temp from TABS …           23.0\n2 2008-01-01     1     1     0    30 16.3     NA temp from TABS …           23.0\n3 2008-01-01     1     1     1     0 16.3     NA temp from TABS …           23.0\n4 2008-01-01     1     1     1    30 16.3     NA temp from TABS …           23.0\n5 2008-01-01     1     1     2     0 16.2     NA temp from TABS …           23.0\n6 2008-01-01     1     1     2    30 16.1     NA temp from TABS …           23.0"
  },
  {
    "objectID": "ifcb-data-wrangle.html#rainfall",
    "href": "ifcb-data-wrangle.html#rainfall",
    "title": "ifcb-port aransas",
    "section": "3.3 Rainfall",
    "text": "3.3 Rainfall\nNext steps: SKH - review precipitation from another source?\n\nAny code to run for this? Siddard - can you document this?\n\nHPCP is likeley inches. Hourly Precipitation Data (HPD)\n\n\nCode\nrainfall &lt;- read.csv(\"input-data/precipitation.csv\")\nhist(rainfall$HPCP)\n\n\n\n\n\n\n\n\n\n\nWhat are rainfall units?? Is it HDCP?\n\n\n\nCode\nrainfall_df &lt;- rainfall %&gt;% select(date = DATE, PRECIP_in = HPCP) %&gt;%\n  mutate(DATE_TIME = ymd_hm(date),\n         MONTH = month(DATE_TIME),\n         DAY = day(DATE_TIME),\n         HOUR = hour(DATE_TIME),\n         MIN = minute(DATE_TIME),\n         DATE = date(DATE_TIME)) %&gt;% \n  select(DATE, MONTH, DAY, HOUR, MIN, PRECIP_in)\nhead(rainfall_df)\n\n\n        DATE MONTH DAY HOUR MIN PRECIP_in\n1 2007-01-01     1   1    1   0      0.00\n2 2007-01-03     1   3   13   0      0.00\n3 2007-01-03     1   3   14   0      0.00\n4 2007-01-03     1   3   15   0      0.00\n5 2007-01-03     1   3   16   0      0.25\n6 2007-01-03     1   3   17   0      0.25\n\n\nCode\nhead(temp_sal_tabs_gauge)\n\n\n# A tibble: 6 × 9\n  DATE       MONTH   DAY  HOUR   MIN TEMP    SAL NOTES            gage_height_ft\n  &lt;date&gt;     &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt;\n1 2008-01-01     1     1     0     0 16.2     NA temp from TABS …           23.0\n2 2008-01-01     1     1     0    30 16.3     NA temp from TABS …           23.0\n3 2008-01-01     1     1     1     0 16.3     NA temp from TABS …           23.0\n4 2008-01-01     1     1     1    30 16.3     NA temp from TABS …           23.0\n5 2008-01-01     1     1     2     0 16.2     NA temp from TABS …           23.0\n6 2008-01-01     1     1     2    30 16.1     NA temp from TABS …           23.0\n\n\nCode\n# range(rainfall_df$HOUR)\n\n\n\n\nCode\nhead(temp_sal_tabs_gauge)\n\n\n# A tibble: 6 × 9\n  DATE       MONTH   DAY  HOUR   MIN TEMP    SAL NOTES            gage_height_ft\n  &lt;date&gt;     &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;                     &lt;dbl&gt;\n1 2008-01-01     1     1     0     0 16.2     NA temp from TABS …           23.0\n2 2008-01-01     1     1     0    30 16.3     NA temp from TABS …           23.0\n3 2008-01-01     1     1     1     0 16.3     NA temp from TABS …           23.0\n4 2008-01-01     1     1     1    30 16.3     NA temp from TABS …           23.0\n5 2008-01-01     1     1     2     0 16.2     NA temp from TABS …           23.0\n6 2008-01-01     1     1     2    30 16.1     NA temp from TABS …           23.0\n\n\nCode\n# range(temp_sal_tabs_gauge$HOUR)\ntemp_sal_gauge_rain &lt;- temp_sal_tabs_gauge %&gt;% \n  left_join(rainfall_df)\n\n\nJoining with `by = join_by(DATE, MONTH, DAY, HOUR, MIN)`"
  },
  {
    "objectID": "ifcb-data-wrangle.html#lunar",
    "href": "ifcb-data-wrangle.html#lunar",
    "title": "ifcb-port aransas",
    "section": "3.4 Lunar",
    "text": "3.4 Lunar\n\n\nCode\nlunar &lt;- read.csv(\"input-data/Lunar cycle values.csv\")\nhead(lunar)\n\n\n     Moon.Phase        Date Time..Universal.Time.\n1     Full Moon  2007 Jan 3                 13:57\n2  Last Quarter 2007 Jan 11                 12:45\n3      New Moon 2007 Jan 19                  4:01\n4 First Quarter 2007 Jan 25                 23:01\n5     Full Moon  2007 Feb 2                  5:45\n6  Last Quarter 2007 Feb 10                  9:51\n\n\n\n\nCode\nlunar_df &lt;- lunar %&gt;% \n  select(Date, Phase = Moon.Phase) %&gt;%\n  mutate(DATE = ymd(Date),\n         MONTH = month(DATE),\n         DAY = day(DATE)) %&gt;% \n  select(-Date)\nhead(lunar_df)\n\n\n          Phase       DATE MONTH DAY\n1     Full Moon 2007-01-03     1   3\n2  Last Quarter 2007-01-11     1  11\n3      New Moon 2007-01-19     1  19\n4 First Quarter 2007-01-25     1  25\n5     Full Moon 2007-02-02     2   2\n6  Last Quarter 2007-02-10     2  10\n\n\n\n\nCode\ntemp_sal_gauge_rain_moon &lt;- temp_sal_gauge_rain %&gt;% \n  left_join(lunar_df)\n\n\nJoining with `by = join_by(DATE, MONTH, DAY)`\n\n\nCode\nhead(temp_sal_gauge_rain_moon)\n\n\n# A tibble: 6 × 11\n  DATE       MONTH   DAY  HOUR   MIN TEMP    SAL NOTES  gage_height_ft PRECIP_in\n  &lt;date&gt;     &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;\n1 2008-01-01     1     1     0     0 16.2     NA temp …           23.0        NA\n2 2008-01-01     1     1     0    30 16.3     NA temp …           23.0        NA\n3 2008-01-01     1     1     1     0 16.3     NA temp …           23.0         0\n4 2008-01-01     1     1     1    30 16.3     NA temp …           23.0        NA\n5 2008-01-01     1     1     2     0 16.2     NA temp …           23.0        NA\n6 2008-01-01     1     1     2    30 16.1     NA temp …           23.0        NA\n# ℹ 1 more variable: Phase &lt;chr&gt;\n\n\nAll metadata is taking shape to be at minute 0 and 30 for every hour!"
  },
  {
    "objectID": "ifcb-data-wrangle.html#tide-height",
    "href": "ifcb-data-wrangle.html#tide-height",
    "title": "ifcb-port aransas",
    "section": "3.5 Tide height",
    "text": "3.5 Tide height\nsee Tide height.R code.\nDownload MLLW\n\n\nCode\ntide_height &lt;- read.csv(\"input-data/port_aransas_water_levels_6min_2007_2017-4142025.csv\")\nhead(tide_height)\n\n\n         timestamp  MLLW std_dev    flag quality\n1 2007-01-01 00:00 0.295   0.008 1,0,0,0       p\n2 2007-01-01 00:06 0.298   0.008 1,0,0,0       p\n3 2007-01-01 00:12 0.308   0.007 1,0,0,0       p\n4 2007-01-01 00:18 0.307   0.008 1,0,0,0       p\n5 2007-01-01 00:24 0.308   0.009 1,0,0,0       p\n6 2007-01-01 00:30 0.312   0.006 1,0,0,0       p\n\n\nCode\n# hist(tide_height$change)\n\n\nSubtract tide height from previous entry to see if tide is incoming or outgoing.\n\n\nCode\ntide_height_df &lt;- tide_height %&gt;% \n  mutate(DATE_TIME = ymd_hm(timestamp),\n         MONTH = month(DATE_TIME),\n         DAY = day(DATE_TIME),\n         HOUR = hour(DATE_TIME),\n         MIN = minute(DATE_TIME),\n         DATE = date(DATE_TIME)) %&gt;% \n  filter(MIN == 0) %&gt;% # Sample only on the hour or at 30 minutes.\n  mutate(DIFFERENCE = MLLW - lag(MLLW, default = first(MLLW))) %&gt;% \n  mutate(tide_direction = case_when(\n      DIFFERENCE &gt; 0 ~ \"Incoming\",\n      DIFFERENCE &lt; 0 ~ \"Outgoing\",\n      TRUE ~ \"No Change\"\n    )) %&gt;% \n  select(DATE, MONTH, DAY, HOUR, MIN, MLLW, DIFFERENCE, tide_direction) \n  \nhead(tide_height_df)\n\n\n        DATE MONTH DAY HOUR MIN  MLLW DIFFERENCE tide_direction\n1 2007-01-01     1   1    0   0 0.295      0.000      No Change\n2 2007-01-01     1   1    1   0 0.302      0.007       Incoming\n3 2007-01-01     1   1    2   0 0.293     -0.009       Outgoing\n4 2007-01-01     1   1    3   0 0.270     -0.023       Outgoing\n5 2007-01-01     1   1    4   0 0.260     -0.010       Outgoing\n6 2007-01-01     1   1    5   0 0.224     -0.036       Outgoing\n\n\nCode\nhist(tide_height_df$DIFFERENCE)\n\n\n\n\n\n\n\n\n\nCode\n# table(tide_height_df$tide_direction)"
  },
  {
    "objectID": "ifcb-data-wrangle.html#archive-1",
    "href": "ifcb-data-wrangle.html#archive-1",
    "title": "ifcb-port aransas",
    "section": "5.1 ARCHIVE",
    "text": "5.1 ARCHIVE\n\n\nCode\n# folder_path &lt;- \"/Users/skhu/Desktop/Projects/GoM-IFCB-PortAransas/input-data/PTAT2/Standard-Meterological-Data/\"\n# file_list &lt;- list.files(folder_path, pattern = \"*.txt\", full.names = TRUE)\n# \n# # Print the list of files to ensure they are correctly detected\n# print(file_list)\n\n\nFunction to load and format input data\n\n\nCode\n# load_and_preprocess &lt;- function(file_path) {\n#   # Read the file, skipping the first two header lines\n#   data &lt;- read_table(file_path, skip = 2, col_names = FALSE)\n#   \n#   # # Assign proper column names for PTAT2\n#   # colnames(data) &lt;- c(\"YY\", \"MM\", \"DD\", \"hh\", \"mm\", \"WDIR\", \"WSPD\", \"GST\",\n#   #                     \"WVHT\", \"DPD\", \"APD\", \"MWD\", \"PRES\", \"ATMP\", \"WTMP\",\n#   #                     \"DEWP\", \"VIS\", \"TIDE\")\n# \n#   # Combine date and time columns into a datetime column using lubridate\n#   data &lt;- data %&gt;%\n#     mutate(\n#       YY = as.integer(YY),\n#       MM = as.integer(MM),\n#       DD = as.integer(DD),\n#       hh = as.integer(hh),\n#       mm = as.integer(mm),\n#       datetime = make_datetime(YY, MM, DD, hh, mm)  # Ensure hourly accuracy\n#     )\n# \n#   return(data)\n# }\n\n\n\n\nCode\n# Load and merge all data files\n# all_data &lt;- file_list %&gt;%\n#   lapply(load_and_preprocess) %&gt;%\n#   bind_rows()\n\n# Check the combined dataset\n# print(dim(all_data))  # Print the dimensions of the data\n# print(head(all_data))  # View the first few rows\n\n# range(all_data$datetime)\n\n\nBelow needs to modified. We cannot group by year - we need to look at a parameters over time.\n\n\nCode\n# Extract year for aggregation\n# head(all_data)\n# all_data &lt;- all_data %&gt;%\n#   unite(day, YY, MM, DD, sep = \"-\", remove = FALSE) %&gt;% \n#   mutate(year = format(datetime, \"%Y\"))\n# \n# # Group by year and calculate averages\n# yearly_data &lt;- all_data %&gt;%\n#   group_by(year) %&gt;%\n#   summarize(\n#     avg_ATMP = mean(as.numeric(ATMP), na.rm = TRUE),\n#     avg_WTMP = mean(as.numeric(WTMP), na.rm = TRUE)\n#   )\n# \n# # Convert year to a numeric format for plotting\n# yearly_data$year &lt;- as.numeric(yearly_data$year)\n# \n# # Check the aggregated data\n# print(head(yearly_data))\n# \n# \n# # Create a full sequence of years\n# full_years &lt;- data.frame(year = 2008:2017)\n# \n# # Merge the full sequence with the aggregated data\n# yearly_data &lt;- full_years %&gt;%\n#   left_join(yearly_data, by = \"year\")\n# \n# # Check the updated yearly data\n# print(yearly_data)"
  },
  {
    "objectID": "ifcb-data-wrangle.html#cells-carbon-and-carbon-per-cell",
    "href": "ifcb-data-wrangle.html#cells-carbon-and-carbon-per-cell",
    "title": "ifcb-port aransas",
    "section": "7.1 Cells, Carbon, and carbon per cell",
    "text": "7.1 Cells, Carbon, and carbon per cell\nCarbon units are pgC per cell; Cells are cells per ml.\ncell * carbon = pgC per ml\n\n\nCode\nhead(combined_biol_metadata)\n\n\n# A tibble: 6 × 32\n  DATE       MONTH DAY.x  HOUR   MIN TEMP    SAL NOTES  gage_height_ft PRECIP_in\n  &lt;date&gt;     &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;\n1 2008-01-01     1     1     0     0 16.2     NA temp …           23.0        NA\n2 2008-01-01     1     1     0     0 16.2     NA temp …           23.0        NA\n3 2008-01-01     1     1     0     0 16.2     NA temp …           23.0        NA\n4 2008-01-01     1     1     0     0 16.2     NA temp …           23.0        NA\n5 2008-01-01     1     1     0     0 16.2     NA temp …           23.0        NA\n6 2008-01-01     1     1     0     0 16.2     NA temp …           23.0        NA\n# ℹ 22 more variables: Phase &lt;chr&gt;, MLLW &lt;dbl&gt;, DIFFERENCE &lt;dbl&gt;,\n#   tide_direction &lt;chr&gt;, DAY.y &lt;dttm&gt;, CELL_ID &lt;chr&gt;, CARBON &lt;dbl&gt;,\n#   COURSE_CLASSIFICATION &lt;chr&gt;, TYPE &lt;chr&gt;, Domain &lt;chr&gt;, Supergroup &lt;chr&gt;,\n#   Phylum &lt;chr&gt;, Class &lt;chr&gt;, Order &lt;chr&gt;, Family &lt;chr&gt;, Genus &lt;chr&gt;,\n#   Species &lt;chr&gt;, COUNT &lt;dbl&gt;, SEASON &lt;chr&gt;, START &lt;date&gt;, END &lt;date&gt;,\n#   DAY_NOYEAR &lt;date&gt;\n\n\nCode\nplot_biotic &lt;- combined_biol_metadata %&gt;% \n  mutate(pgC_ml = COUNT * CARBON) %&gt;% \n  select(DATE, CELL_ID, COURSE_CLASSIFICATION, TYPE, Domain, Supergroup, Phylum, Class, Order, Family, Genus, Species, SEASON, CARBON, COUNT, pgC_ml, START, END, DAY_NOYEAR)\n\n\n\nPlot biotic - all years\nWe want to add information to the dates for when there are Karenia notifications and a data gap.\n\n\nCode\nkar_gap &lt;- plot_biotic %&gt;% \n  filter(CELL_ID == \"Karenia_brevis\") %&gt;% \n  mutate(ADD = case_when(\n    (grepl(\"Karenia_brevis\", CELL_ID) & COUNT &gt; 2) ~ \"Notification\")) %&gt;% \n  mutate(WEEK = cut(DATE, \"week\", start.on.monday = TRUE),\n         YEAR = year(as_date(DATE))) %&gt;% \n  select(WEEK, YEAR, ADD) %&gt;% \n  distinct() %&gt;% \n  drop_na()\n\n\n\n\nCode\nvalues_byweek &lt;- plot_biotic %&gt;% \n  filter(COURSE_CLASSIFICATION == \"Microeukaryote\") %&gt;% \n  filter(Supergroup != \"Plantae\" & Supergroup != \"Animalia/Metazoa\") %&gt;% \n  select(-START, -END, -DAY_NOYEAR) %&gt;% \n  pivot_longer(cols = -c(DATE, CELL_ID, COURSE_CLASSIFICATION, TYPE, Domain, Supergroup, Phylum, Class, Order, Family, Genus, Species, SEASON), names_to = \"VARIABLE\", values_to = \"VALUE\") %&gt;% \n  distinct() %&gt;% \n  # Average the variable PER day for a single Cell ID type\n  group_by(VARIABLE, DATE, CELL_ID, SEASON) %&gt;% \n    summarise(MEAN_bycell_day = mean(VALUE)) %&gt;% \n  ungroup() %&gt;% \n  # Sum total cells for a single day\n  group_by(DATE, SEASON, VARIABLE) %&gt;% \n    summarise(SUM_byday = sum(MEAN_bycell_day)) %&gt;% \n  ungroup() %&gt;% \n  # Add a column to specify the WEEK - have week start on Mondays\n  mutate(WEEK = cut(DATE, \"week\", start.on.monday = TRUE),\n         MONTH = month(as_date(DATE)),\n         YEAR = year(as_date(DATE))) %&gt;% \n  # Get mean, min, and max for each week\n  group_by(WEEK, SEASON, YEAR, VARIABLE) %&gt;% \n    summarise(MEAN_WEEK = mean(SUM_byday),\n              MAX_WEEK = max(SUM_byday),\n              MIN_WEEK = min(SUM_byday)) \n\n\n`summarise()` has grouped output by 'VARIABLE', 'DATE', 'CELL_ID'. You can\noverride using the `.groups` argument.\n`summarise()` has grouped output by 'DATE', 'SEASON'. You can override using\nthe `.groups` argument.\n`summarise()` has grouped output by 'WEEK', 'SEASON', 'YEAR'. You can override\nusing the `.groups` argument.\n\n\nCode\nhead(values_byweek)\n\n\n# A tibble: 6 × 7\n# Groups:   WEEK, SEASON, YEAR [2]\n  WEEK       SEASON  YEAR VARIABLE MEAN_WEEK MAX_WEEK MIN_WEEK\n  &lt;fct&gt;      &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 2007-12-31 Winter  2008 CARBON      56195.   82761.  37467. \n2 2007-12-31 Winter  2008 COUNT         310.     373.    263. \n3 2007-12-31 Winter  2008 pgC_ml    1124443. 1581473. 709056. \n4 2008-01-07 Winter  2008 CARBON      49301.   94753.  19648. \n5 2008-01-07 Winter  2008 COUNT         203.     494.     29.2\n6 2008-01-07 Winter  2008 pgC_ml     918768. 2670613.  19474. \n\n\n\n\nCode\noneyr_counts &lt;- values_byweek %&gt;% \n  mutate(VARIABLE_LABEL = factor(VARIABLE, levels = c(\"COUNT\", \"CARBON\", \"pgC_ml\"), labels = c(bquote(\"Cells\"~ml^-1), bquote(\"pg Carbon\"~cell^-1), bquote(\"pg Carbon\"~ml^-1)))) %&gt;% \n  ggplot(aes(x = as_date(WEEK), y = MEAN_WEEK)) + \n    geom_line(color = \"black\", alpha = 0.4) +\n    geom_linerange(aes(ymin = MIN_WEEK, ymax = MAX_WEEK, color = SEASON, alpha = 0.5), linewidth = 0.5) +\n    geom_point(shape = 19, size = 2, aes(color = SEASON)) +\n  theme_classic() +\n  facet_grid(rows = vars(VARIABLE_LABEL), scales = \"free\", \n             labeller = label_parsed, switch = \"y\") +\n  scale_x_date(date_labels = \"%b %y\", expand = c(0,0), date_breaks = \"3 months\", date_minor_breaks = \"month\") +\n  scale_color_manual(values = c(\"#cc5500\",\"#bccbae\",\"#ffbf00\",\"#5d4e62\")) +\n  scale_y_log10() +\n  labs(x = \"IFCB time series\", y = \"\") +\n  theme(legend.position = \"bottom\", legend.title = element_blank(),\n        strip.text.y = element_text(color = \"black\", face = \"bold\", size = 14),\n        strip.background = element_blank(),\n        strip.placement = \"outside\",\n        axis.text.x = element_text(color = \"black\", face = \"bold\", size = 14),\n        axis.title = element_text(color = \"black\", face = \"bold\", size = 14),\n        axis.text.y = element_text(color = \"black\", face = \"bold\", size = 14),\n        panel.grid.major = element_line(color = \"#d9d9d9\", linewidth = 0.3)) +\n  geom_point(data = (kar_gap %&gt;% filter(ADD == \"Notification\")), aes(x = as_date(WEEK), y = 10000), shape = 19, color = \"red\", alpha = 0.6)\n# labs(y = bquote(\"FLP cells \" ~ mL^-1), x = \"Incubation hours\") + \noneyr_counts\n\n\n\n\n\n\n\n\n\nCode\n  # geom_point(data = (kar_gap %&gt;% filter(ADD == \"Notification\")), aes(x = as_date(WEEK), y = 10000), shape = 19, color = \"red\", alpha = 0.6) +\n  # geom_point(data = (kar_gap %&gt;% filter(ADD != \"Notification\")), aes(x = as_date(WEEK), y = 0), size = 3, alpha = 0.6, shape = 17, color = \"#bdbdbd\")\n\n\n\nThis is a good supplementary figure or summary figure for a poster explaining the IFCB.\n\n\n\nPlot biotic - one year\n\n\nCode\nhead(plot_biotic)\n\n\n# A tibble: 6 × 19\n  DATE       CELL_ID  COURSE_CLASSIFICATION TYPE  Domain Supergroup Phylum Class\n  &lt;date&gt;     &lt;chr&gt;    &lt;chr&gt;                 &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;\n1 2008-01-01 Akashiwo Microeukaryote        Cell  \"Euka… \"Alveolat… \"Dino… \"Din…\n2 2008-01-01 Anabaena Cyanobacteria         Cell  \"Bact… \"Cyanobac… \"Cyan… \"Cya…\n3 2008-01-01 Apedine… Microeukaryote        Cell  \"Euka… \"Strameno… \"Ochr… \"Dic…\n4 2008-01-01 Asterio… Microeukaryote        Cell  \"Euka… \"Strameno… \"Ochr… \"Bac…\n5 2008-01-01 Beads    IFCB excess           Non-… \"\"     \"\"         \"\"     \"\"   \n6 2008-01-01 Centric  Microeukaryote        Cell… \"Euka… \"Strameno… \"Ochr… \"Bac…\n# ℹ 11 more variables: Order &lt;chr&gt;, Family &lt;chr&gt;, Genus &lt;chr&gt;, Species &lt;chr&gt;,\n#   SEASON &lt;chr&gt;, CARBON &lt;dbl&gt;, COUNT &lt;dbl&gt;, pgC_ml &lt;dbl&gt;, START &lt;date&gt;,\n#   END &lt;date&gt;, DAY_NOYEAR &lt;date&gt;\n\n\nCode\nbiotic_1yr &lt;- plot_biotic %&gt;% \n  # Group by cell ID to get mean for a single day\n  group_by(DAY_NOYEAR, DATE, CELL_ID, SEASON, COURSE_CLASSIFICATION) %&gt;% \n    summarise(PER_DAY_CELL = mean(COUNT),\n              PER_DAY_CARBON = mean(CARBON),\n              PER_DAY_CARBON_ml = mean(pgC_ml)) %&gt;% \n  ungroup() %&gt;% \n  # NOW sum up the different cell types that contribute to the course classification per day\n  group_by(DAY_NOYEAR, DATE, SEASON, COURSE_CLASSIFICATION) %&gt;% \n    summarise(PER_DAY_COURSE_CELL = sum(PER_DAY_CELL),\n              PER_DAY_COURSE_CARBON = sum(PER_DAY_CARBON),\n              PER_DAY_COURSE_CARBONml = sum(PER_DAY_CARBON_ml)) %&gt;% \n  ungroup() %&gt;% \n  # Now average by year\n  group_by(DAY_NOYEAR, COURSE_CLASSIFICATION, SEASON) %&gt;%  \n    summarise(MEAN_COUNTS_1yr = mean(PER_DAY_COURSE_CELL),\n              MEAN_CARBON_1yr = mean(PER_DAY_COURSE_CARBON),\n              MEAN_CARBONml_1yr = mean(PER_DAY_COURSE_CARBONml)) \n\n\n`summarise()` has grouped output by 'DAY_NOYEAR', 'DATE', 'CELL_ID', 'SEASON'.\nYou can override using the `.groups` argument.\n`summarise()` has grouped output by 'DAY_NOYEAR', 'DATE', 'SEASON'. You can\noverride using the `.groups` argument.\n`summarise()` has grouped output by 'DAY_NOYEAR', 'COURSE_CLASSIFICATION'. You\ncan override using the `.groups` argument.\n\n\nCode\nhead(biotic_1yr)\n\n\n# A tibble: 6 × 6\n# Groups:   DAY_NOYEAR, COURSE_CLASSIFICATION [6]\n  DAY_NOYEAR COURSE_CLASSIFICATION SEASON MEAN_COUNTS_1yr MEAN_CARBON_1yr\n  &lt;date&gt;     &lt;chr&gt;                 &lt;chr&gt;            &lt;dbl&gt;           &lt;dbl&gt;\n1 2024-01-01 Bacteria              Winter          0.105            219. \n2 2024-01-01 Biol unknown          Winter        182.            124017. \n3 2024-01-01 Cyanobacteria         Winter          0.535             29.3\n4 2024-01-01 IFCB excess           Winter         20.2            12394. \n5 2024-01-01 Larvae                Winter          0.0793          1656. \n6 2024-01-01 Microeukaryote        Winter        218.             78674. \n# ℹ 1 more variable: MEAN_CARBONml_1yr &lt;dbl&gt;\n\n\n\n\nCode\nYMAX &lt;- max(biotic_1yr$MEAN_CARBON_1yr)\nYMAX &lt;-0\n# YMAX\nbiotic_1yr %&gt;% \n  pivot_longer(cols = starts_with(\"MEAN_\")) %&gt;% \n  mutate(VARIABLE_LABEL = factor(name, levels = c(\"MEAN_COUNTS_1yr\", \"MEAN_CARBON_1yr\", \"MEAN_CARBONml_1yr\"), labels = c(bquote(\"Cells\"~ml^-1), bquote(\"pg Carbon\"~cell^-1), bquote(\"pg Carbon\"~ml^-1)))) %&gt;% \n  ggplot(aes(x = DAY_NOYEAR, y = value, fill = COURSE_CLASSIFICATION)) + \n  geom_area(position = \"stack\") +\n  theme_classic() +\n  scale_x_date(date_labels = \"%b\", expand = c(0,0)) +\n  scale_y_continuous(expand = c(0,0)) +\n  facet_grid(rows = vars(VARIABLE_LABEL), scales = \"free\", labeller = label_parsed) +\n  labs(x = \"\", y = \"\") +\n  scale_fill_manual(values = c(\"#fead5d\", \"#1468b3\",\"#00ac43\",\"#f6f86d\",\"#fc7e66\", \"#c304aa\")) +\n  theme(legend.position = \"bottom\", legend.title = element_blank(),\n        axis.text.x = element_text(color = \"black\", face = \"bold\", size = 12),\n        axis.text.y = element_text(color = \"black\", face = \"bold\", size = 12),\n        strip.background = element_blank()) +\n  geom_rect(xmin = as_date(\"2024-09-01\"), xmax = as_date(\"2024-11-30\"), ymin = (YMAX), ymax = (YMAX+40), alpha = 0.2, fill = \"#cc5500\") +\n  geom_rect(xmin = as_date(\"2024-03-01\"), xmax = as_date(\"2024-5-31\"), ymin = (YMAX), ymax = (YMAX+40), alpha = 0.2, fill = \"#bccbae\") +\n  geom_rect(xmin = as_date(\"2024-06-01\"), xmax = as_date(\"2024-08-31\"), ymin = (YMAX), ymax = (YMAX+40), alpha = 0.2, fill = \"#ffbf00\") +\n  geom_rect(xmin = as_date(\"2024-12-01\"), xmax = as_date(\"2024-12-31\"), ymin = (YMAX), ymax = (YMAX+40), alpha = 0.2, fill = \"#5d4e62\") +\n  geom_rect(xmin = as_date(\"2024-01-01\"), xmax = as_date(\"2024-02-29\"), ymin = (YMAX), ymax = (YMAX+40),, alpha = 0.2, fill = \"#5d4e62\")\n\n\n\n\n\n\n\n\n\nCode\n#Spring = March 1 - May 31 \n#Summer = June 1 - Aug 31 \n#Fall = Sept 1 - Nov 30 \n#Winter = Dec 1 - Feb (March 1 (-1))"
  },
  {
    "objectID": "ifcb-data-wrangle.html#all-daily",
    "href": "ifcb-data-wrangle.html#all-daily",
    "title": "ifcb-port aransas",
    "section": "7.2 All daily",
    "text": "7.2 All daily\nLook at by hour and season for different supergroups.\n\n\nCode\ncombined_biol_metadata |&gt; \n  filter(COURSE_CLASSIFICATION == \"Microeukaryote\") %&gt;% \n  filter(Phylum != \"Cnidaria\") %&gt;% \n  # Remove any zeroes\n  filter(COUNT &gt; 0 | is.na(COUNT)) %&gt;% \n  # Get average for a given hour in the same month and season for an individual day.\n  group_by(HOUR, SEASON, Supergroup, Phylum) %&gt;% \n    summarise(MEAN_COUNT_DAILY = mean(COUNT),\n              MAX_COUNT_DAILY = max(COUNT),\n              MIN_COUNT_DAILY = min(COUNT)) %&gt;% \n  ggplot(aes(x = (HOUR), y = MEAN_COUNT_DAILY, color = SEASON)) +\n    geom_path(aes(group = Phylum)) +\n    geom_point(shape = 19) +\n    facet_grid(rows = vars(Supergroup), cols = vars(SEASON), scales = \"free\") +\n  theme_classic() +\n  scale_color_manual(values = c(\"#cc5500\",\"#bccbae\",\"#ffbf00\",\"#5d4e62\")) +\n  scale_y_log10() +\n  labs(x = \"\", y = bquote(\"log cell\"~ml^-1)) +\n  theme(legend.position = \"bottom\", legend.title = element_blank(),\n        axis.text.x = element_text(color = \"black\", face = \"bold\", size = 10),\n        axis.title = element_text(color = \"black\", face = \"bold\", size = 11),\n        axis.text.y = element_text(color = \"black\", face = \"bold\", size = 10),\n        panel.grid.major = element_line(color = \"#d9d9d9\", linewidth = 0.3))\n\n\n`summarise()` has grouped output by 'HOUR', 'SEASON', 'Supergroup'. You can\noverride using the `.groups` argument.\n\n\n\n\n\n\n\n\n\nEach line represents a phylum, so there are some withe more variability than others. We also know that cell types are not equally represented across the supergroups in the IFCB data, therefore, we need to focus on the stramenopiles and alveolata vs. other supergroups.\n\n\nCode\nalv_stram &lt;- c(\"Stramenopiles\", \"Alveolata\")\n# counts_long_wtax_wseason\ncombined_biol_metadata |&gt; \n  filter(COURSE_CLASSIFICATION == \"Microeukaryote\") %&gt;% \n  filter(Phylum != \"Cnidaria\") %&gt;% \n  filter(!(Supergroup %in% alv_stram)) %&gt;% \n  # Remove any zeroes\n  filter(COUNT &gt; 0 | is.na(COUNT)) %&gt;% \n  # Get average for a given hour in the same month and season for an individual day.\n  group_by(HOUR, SEASON, Supergroup, Phylum, CELL_ID) %&gt;% \n    summarise(MEAN_COUNT_DAILY = mean(COUNT),\n              MAX_COUNT_DAILY = max(COUNT),\n              MIN_COUNT_DAILY = min(COUNT)) %&gt;% \n  ggplot(aes(x = (HOUR), y = MEAN_COUNT_DAILY, color = SEASON)) +\n    geom_path(aes(group = CELL_ID)) +\n    geom_point(shape = 19) +\n    facet_grid(rows = vars(Supergroup), cols = vars(SEASON), scales = \"free\") +\n  theme_classic() +\n  scale_color_manual(values = c(\"#cc5500\",\"#bccbae\",\"#ffbf00\",\"#5d4e62\")) +\n  scale_y_log10() +\n  labs(x = \"\", y = bquote(\"log cell\"~ml^-1)) +\n  theme(legend.position = \"bottom\", legend.title = element_blank(),\n        axis.text.x = element_text(color = \"black\", face = \"bold\", size = 10),\n        axis.title = element_text(color = \"black\", face = \"bold\", size = 11),\n        axis.text.y = element_text(color = \"black\", face = \"bold\", size = 10),\n        panel.grid.major = element_line(color = \"#d9d9d9\", linewidth = 0.3))\n\n\n`summarise()` has grouped output by 'HOUR', 'SEASON', 'Supergroup', 'Phylum'.\nYou can override using the `.groups` argument."
  },
  {
    "objectID": "ifcb-data-wrangle.html#plot-at-cell-type-level-within-each-class",
    "href": "ifcb-data-wrangle.html#plot-at-cell-type-level-within-each-class",
    "title": "ifcb-port aransas",
    "section": "8.1 Plot at cell type level within each class",
    "text": "8.1 Plot at cell type level within each class\n\n\nCode\nhead(combined_biol_metadata)\n\n\n# A tibble: 6 × 32\n  DATE       MONTH DAY.x  HOUR   MIN TEMP    SAL NOTES  gage_height_ft PRECIP_in\n  &lt;date&gt;     &lt;dbl&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;\n1 2008-01-01     1     1     0     0 16.2     NA temp …           23.0        NA\n2 2008-01-01     1     1     0     0 16.2     NA temp …           23.0        NA\n3 2008-01-01     1     1     0     0 16.2     NA temp …           23.0        NA\n4 2008-01-01     1     1     0     0 16.2     NA temp …           23.0        NA\n5 2008-01-01     1     1     0     0 16.2     NA temp …           23.0        NA\n6 2008-01-01     1     1     0     0 16.2     NA temp …           23.0        NA\n# ℹ 22 more variables: Phase &lt;chr&gt;, MLLW &lt;dbl&gt;, DIFFERENCE &lt;dbl&gt;,\n#   tide_direction &lt;chr&gt;, DAY.y &lt;dttm&gt;, CELL_ID &lt;chr&gt;, CARBON &lt;dbl&gt;,\n#   COURSE_CLASSIFICATION &lt;chr&gt;, TYPE &lt;chr&gt;, Domain &lt;chr&gt;, Supergroup &lt;chr&gt;,\n#   Phylum &lt;chr&gt;, Class &lt;chr&gt;, Order &lt;chr&gt;, Family &lt;chr&gt;, Genus &lt;chr&gt;,\n#   Species &lt;chr&gt;, COUNT &lt;dbl&gt;, SEASON &lt;chr&gt;, START &lt;date&gt;, END &lt;date&gt;,\n#   DAY_NOYEAR &lt;date&gt;\n\n\nDiatom genus of choice!\n\n\nCode\n# diatom_genus &lt;- c(\"Chaetoceros\", \"\")\n\n\nPlot a year trend for Cell types within the classes.\n\n\nCode\ndiatom_genus_oneyr &lt;- combined_biol_metadata |&gt; \n  filter(Class %in% \"Bacillariophyceae\") %&gt;% \n  # Remove any zeroes\n  filter(COUNT &gt; 0 | is.na(COUNT)) %&gt;% \n  select(DATE, COUNT, Order, Family, Genus, CELL_ID, CARBON, DAY_NOYEAR) %&gt;%\n  distinct() %&gt;% \n  # Add up Genus level types for a single day. \n  group_by(DATE, Order, Family, Genus, CELL_ID, DAY_NOYEAR) %&gt;% \n    summarise(SUM_CELLS_day = sum(COUNT),\n              SUM_CARBON_day = sum(CARBON)) %&gt;% \n  ungroup() %&gt;% \n  group_by(DAY_NOYEAR, Genus) %&gt;% \n  # Take average across years.\n    summarise(MEAN_CELLS_day_1yr = mean(SUM_CELLS_day),\n              MAX_CELLS_day_1yr = max(SUM_CELLS_day),\n              MIN_CELLS_day_1yr = min(SUM_CELLS_day),\n              SEM_CELLS_day_1yr = (sd(SUM_CELLS_day)/n()),\n              MEAN_C_day_1yr = mean(SUM_CARBON_day),\n              MAX_C_day_1yr = max(SUM_CARBON_day),\n              MIN_C_day_1yr = min(SUM_CARBON_day),\n              SEM_C_day_1yr = (sd(SUM_CARBON_day/n()))) \n\n\n`summarise()` has grouped output by 'DATE', 'Order', 'Family', 'Genus',\n'CELL_ID'. You can override using the `.groups` argument.\n`summarise()` has grouped output by 'DAY_NOYEAR'. You can override using the\n`.groups` argument.\n\n\nCode\n# Standard error of the mean = SD / sample size\nhead(diatom_genus_oneyr)\n\n\n# A tibble: 6 × 10\n# Groups:   DAY_NOYEAR [1]\n  DAY_NOYEAR Genus        MEAN_CELLS_day_1yr MAX_CELLS_day_1yr MIN_CELLS_day_1yr\n  &lt;date&gt;     &lt;chr&gt;                     &lt;dbl&gt;             &lt;dbl&gt;             &lt;dbl&gt;\n1 2024-01-01 \"\"                       106.              1286.             0.177 \n2 2024-01-01 \"Chaetocero…              99.2             1042.             0.0769\n3 2024-01-01 \"Corethron\"                9.12              23.8            0.540 \n4 2024-01-01 \"Cymatosira\"              74.0              181.            12.2   \n5 2024-01-01 \"Dactylioso…              18.8               63.4            0.759 \n6 2024-01-01 \"Diploneis\"               18.3               67.0            3.49  \n# ℹ 5 more variables: SEM_CELLS_day_1yr &lt;dbl&gt;, MEAN_C_day_1yr &lt;dbl&gt;,\n#   MAX_C_day_1yr &lt;dbl&gt;, MIN_C_day_1yr &lt;dbl&gt;, SEM_C_day_1yr &lt;dbl&gt;\n\n\nCode\n# length(unique(diatom_oneyr$CELL_ID)) # 37 unique cell types under diatoms. \n\n\nParse diatom data:\n\n\nCode\ntmp_diatom &lt;- combined_biol_metadata |&gt; \n  filter(Class %in% \"Bacillariophyceae\") %&gt;% \n  select(Phylum, Class, Order, Family, Genus, Species, CELL_ID) %&gt;% \n  distinct()\n\nperct_diatom  &lt;- combined_biol_metadata |&gt; \n  filter(Class %in% \"Bacillariophyceae\") %&gt;% \n  select(Phylum, Class, Order, Family, Genus, Species, CELL_ID) %&gt;% \n  distinct()\n\n\nPlot diatoms.\n\n\nCode\ndiatom_genus_oneyr %&gt;% \n  # filter(!(Genus != \"\")) %&gt;% \n  ggplot(aes(x = as_date(DAY_NOYEAR), fill = Genus)) +\n  geom_area(aes(y = MEAN_CELLS_day_1yr), color = \"black\", position = \"fill\") +\n  theme_classic() +\n  scale_x_date(date_labels = \"%b\", expand = c(0,0)) +\n  # scale_y_log10() +\n  # facet_grid(rows = vars(Order), scales = \"free\", labeller = label_parsed) +\n  labs(x = \"\", y = \"Cells per ml\") +\n  # scale_color_manual(values = c(\"#1468b3\",\"#fc7e66\", \"#00ac43\",\"#fead5d\", \"#c304aa\")) +\n  # scale_fill_manual(values = c(\"#1468b3\",\"#fc7e66\", \"#00ac43\",\"#fead5d\", \"#c304aa\")) +\n  theme(legend.position = \"bottom\", legend.title = element_blank(),\n        axis.text.x = element_text(color = \"black\", face = \"bold\", size = 12),\n        axis.text.y = element_text(color = \"black\", face = \"bold\", size = 12),\n        strip.text.y = element_text(color = \"black\", face = \"bold\", size = 12),\n        strip.background = element_blank(),\n        panel.grid.major.x = element_line(color = \"grey80\"))\n\n\n\n\n\n\n\n\n\n\nTile plots\n\n\nCode\ncombined_biol_metadata |&gt; \n  filter(Supergroup == \"Alveolata\") |&gt; \n  group_by(Phylum, Class, Order) |&gt; \n    summarise(SUM = sum(COUNT),\n              COUNT = n()) |&gt; \n  ggplot(aes(area = SUM, fill = Class, subgroup = Order, label = Order)) +\n  geom_treemap(color = \"white\") +\n  geom_treemap_subgroup_border(color = \"grey\") +\n    geom_treemap_text(place = \"centre\",size = 12) + \n  theme_classic() +\n  labs(title = \"Most abundant Alveolata\")\n\n\n`summarise()` has grouped output by 'Phylum', 'Class'. You can override using\nthe `.groups` argument.\n\n\n\n\n\n\n\n\n\n\n\nCode\ncombined_biol_metadata |&gt; \n  filter(Supergroup == \"Alveolata\") |&gt; \n  group_by(Phylum, Class, Order) |&gt; \n    summarise(SUM_CARBON = sum(CARBON)) |&gt; \n  ggplot(aes(area = SUM_CARBON, fill = Class, subgroup = Order, label = Order)) +\n  geom_treemap(color = \"white\") +\n  geom_treemap_subgroup_border(color = \"grey\") +\n    geom_treemap_text(place = \"centre\",size = 12) + \n  theme_classic() +\n  labs(\"Alveolata by carbon\")\n\n\n`summarise()` has grouped output by 'Phylum', 'Class'. You can override using\nthe `.groups` argument.\n\n\n\n\n\n\n\n\n\n\n\nBreakdown Stramenopiles\n\n\nCode\ncombined_biol_metadata |&gt; \n  filter(Supergroup == \"Stramenopiles\") |&gt; \n  group_by(Phylum, Class, Order) |&gt; \n    summarise(SUM = sum(COUNT),\n              COUNT = n()) |&gt; \n  ggplot(aes(area = SUM, fill = Class, subgroup = Order, label = Order)) +\n  geom_treemap(color = \"white\") +\n  geom_treemap_subgroup_border(color = \"grey\") +\n    geom_treemap_text(place = \"centre\",size = 12) + \n  theme_classic() +\n  labs(title = \"Most abundant Stramenopiles\")\n\n\n`summarise()` has grouped output by 'Phylum', 'Class'. You can override using\nthe `.groups` argument.\n\n\n\n\n\n\n\n\n\n\n\nCode\ncombined_biol_metadata |&gt; \n  filter(Supergroup == \"Stramenopiles\") |&gt; \n  group_by(Phylum, Class, Order) |&gt; \n    summarise(SUM_CARBON = sum(CARBON)) |&gt; \n  ggplot(aes(area = SUM_CARBON, fill = Class, subgroup = Order, label = Order)) +\n  geom_treemap(color = \"white\") +\n  geom_treemap_subgroup_border(color = \"grey\") +\n    geom_treemap_text(place = \"centre\",size = 12) + \n  theme_classic() +\n  labs(title = \"Stramenopiles by carbon\")\n\n\n`summarise()` has grouped output by 'Phylum', 'Class'. You can override using\nthe `.groups` argument."
  }
]