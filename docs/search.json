[
  {
    "objectID": "ifcb-data-wrangle.html",
    "href": "ifcb-data-wrangle.html",
    "title": "ifcb-port aransas",
    "section": "",
    "text": "Code\n# | warning: false\n# | message: false\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(patchwork)\nlibrary(svglite)\nlibrary(scales)\n\n\n\nAttaching package: 'scales'\n\nThe following object is masked from 'package:purrr':\n\n    discard\n\nThe following object is masked from 'package:readr':\n\n    col_factor\n\n\nCode\nlibrary(treemapify)"
  },
  {
    "objectID": "ifcb-data-wrangle.html#refine-input-data",
    "href": "ifcb-data-wrangle.html#refine-input-data",
    "title": "ifcb-port aransas",
    "section": "2.1 Refine input data",
    "text": "2.1 Refine input data"
  },
  {
    "objectID": "ifcb-data-wrangle.html#add-taxa-curated-to-cell-ids-and-carbon-data",
    "href": "ifcb-data-wrangle.html#add-taxa-curated-to-cell-ids-and-carbon-data",
    "title": "ifcb-port aransas",
    "section": "2.2 Add taxa curated to cell IDs and carbon data",
    "text": "2.2 Add taxa curated to cell IDs and carbon data\nSiddarth contributed to this taxa list.\n\n\nCode\ntax_curated &lt;- read.csv(\"input-data/tax-list.csv\") |&gt;\n  select(CELL_ID:Species) \n\n\nAdd to cell ID information\n\n\nCode\ncounts_long_wtax &lt;- counts %&gt;% \n  pivot_longer(cols = -c(DAY, DATE, MONTH, HOUR), names_to = \"CELL_ID\", values_to = \"COUNT\", values_drop_na = TRUE) %&gt;% \n  filter(COUNT &gt; 0) %&gt;% \n  left_join(tax_curated)\n\n\nJoining with `by = join_by(CELL_ID)`\n\n\nCode\nhead(counts_long_wtax)\n\n\n# A tibble: 6 × 16\n  DAY                 DATE       MONTH  HOUR CELL_ID           COUNT\n  &lt;dttm&gt;              &lt;date&gt;     &lt;dbl&gt; &lt;int&gt; &lt;chr&gt;             &lt;dbl&gt;\n1 2008-01-01 00:00:00 2008-01-01     1     0 Akashiwo         0.0783\n2 2008-01-01 00:00:00 2008-01-01     1     0 Anabaena         0.0783\n3 2008-01-01 00:00:00 2008-01-01     1     0 Apedinella       8.24  \n4 2008-01-01 00:00:00 2008-01-01     1     0 Asterionellopsis 0.0779\n5 2008-01-01 00:00:00 2008-01-01     1     0 Beads            5.81  \n6 2008-01-01 00:00:00 2008-01-01     1     0 Centric          2.82  \n# ℹ 10 more variables: COURSE_CLASSIFICATION &lt;chr&gt;, TYPE &lt;chr&gt;, Domain &lt;chr&gt;,\n#   Supergroup &lt;chr&gt;, Phylum &lt;chr&gt;, Class &lt;chr&gt;, Order &lt;chr&gt;, Family &lt;chr&gt;,\n#   Genus &lt;chr&gt;, Species &lt;chr&gt;\n\n\nCode\n# range(counts_long_wtax$COUNT)\n\n\nAdd to carbon data\n\n\nCode\ncarbon_long_wtax &lt;- carbon %&gt;% \n  pivot_longer(cols = -c(DAY, DATE, MONTH, HOUR), names_to = \"CELL_ID\", values_to = \"CARBON\", values_drop_na = TRUE) %&gt;% \n  filter(CARBON &gt; 0) %&gt;% \n  left_join(tax_curated)\n\n\nJoining with `by = join_by(CELL_ID)`\n\n\nCode\n# head(carbon_long_wtax)\n# range(carbon_long_wtax$CARBON)"
  },
  {
    "objectID": "ifcb-data-wrangle.html#combine-carbon-and-cell-counts",
    "href": "ifcb-data-wrangle.html#combine-carbon-and-cell-counts",
    "title": "ifcb-port aransas",
    "section": "2.3 Combine carbon and cell counts",
    "text": "2.3 Combine carbon and cell counts\n\n\nCode\ncombined_gom_long &lt;- carbon_long_wtax %&gt;% \n  left_join(counts_long_wtax)\n\n\nJoining with `by = join_by(DAY, DATE, MONTH, HOUR, CELL_ID,\nCOURSE_CLASSIFICATION, TYPE, Domain, Supergroup, Phylum, Class, Order, Family,\nGenus, Species)`\n\n\nTypes of classifications in dataset.\n\n\nCode\ntable(combined_gom_long$COURSE_CLASSIFICATION)\n\n\n\n      Bacteria   Biol unknown  Cyanobacteria    IFCB excess         Larvae \n         23128         470682          54241         247756           2200 \nMicroeukaryote \n       4193189 \n\n\nCode\ntable(combined_gom_long$TYPE)\n\n\n\nBiol unknown         Cell    Cell type     Non-biol \n      336583      3876186       599772       178655 \n\n\nCode\n# glimpse(combined_gom_long)\n# table(combined_gom_long$COURSE_CLASSIFICATION)"
  },
  {
    "objectID": "ifcb-data-wrangle.html#add-seasons",
    "href": "ifcb-data-wrangle.html#add-seasons",
    "title": "ifcb-port aransas",
    "section": "2.4 Add seasons",
    "text": "2.4 Add seasons\nMake data frames to assign season\nSpring = March 1 - May 31 Summer = June 1 - Aug 31 Fall = Sept 1 - Nov 30 Winter = Dec 1 - Feb (March 1 (-1))\nMake a new dataframe to just add seasons (manually) to the date. I’m subsetting to 2024 to include leap day years.\n\n\nCode\ndf_season &lt;- counts %&gt;% \n  pivot_longer(cols = -c(DAY, DATE, MONTH, HOUR), names_to = \"CELL_ID\", values_to = \"COUNT\") %&gt;%\n  mutate(DATA_GAP = case_when(\n    is.na(COUNT) ~ \"Missing\",\n    TRUE ~ \"Not missing\"\n  )) |&gt; \n  mutate(date_tmp =  as.Date(format(DAY, '2024-%m-%d')), \n        SEASON = case_when(between(date_tmp, ymd('2024-03-01'), ymd('2024-05-31')) ~ \"Spring\",\n                           between(date_tmp, ymd('2024-06-01'), ymd('2024-08-31')) ~ \"Summer\", \n                           between(date_tmp, ymd('2024-09-01'), ymd('2024-11-30')) ~ \"Fall\", \n                           TRUE ~ \"Winter\")) %&gt;% # Winter needs to be \"else\" because you can't select between.\n  select(DAY, date_tmp, SEASON, DATA_GAP) |&gt; distinct() |&gt; \n  mutate(YEAR = year(DAY),\n         MONTH = month(DAY),\n         DATE = day(DAY),\n         HOUR = hour(DAY)) |&gt; \n  group_by(SEASON) |&gt; \n  mutate(month_start_tmp = case_when(\n    SEASON == \"Winter\" ~ max(MONTH),\n    TRUE ~ min(MONTH)),\n    year_start_tmp = case_when(SEASON == \"Winter\" ~ YEAR - 1,\n                               TRUE ~ YEAR),\n    ) |&gt; \n  mutate(month_end_tmp = case_when(\n    SEASON == \"Winter\" ~ 2,\n    TRUE ~ max(MONTH))) |&gt; \n  group_by(SEASON, MONTH) |&gt; \n  mutate(day_start_tmp = min(day(DAY)),\n         day_end_tmp = case_when(\n           (SEASON == \"Winter\" & leap_year(YEAR) == TRUE) ~ 29,\n           (SEASON == \"Winter\" & leap_year(YEAR) == FALSE) ~ 28,\n           (SEASON == \"Summer\" | SEASON == \"Spring\") ~ 31,\n           SEASON == \"Fall\" ~ 30\n         )) |&gt; \n  ungroup() |&gt; \n  unite(\"start\", year_start_tmp, month_start_tmp, day_start_tmp, sep = \"-\", remove = FALSE) |&gt; \n  unite(\"end\", YEAR, month_end_tmp, day_end_tmp, sep = \"-\", remove = FALSE) |&gt; \n  mutate(START = ymd(start),\n         END = ymd(end),\n         START_noy = mdy(paste(month(START), day(START), \"2024\", sep = \"-\")),\n         END_noy = mdy(paste(month(END), day(END), \"2024\", sep = \"-\"))) |&gt; \n  select(DAY, DATE, MONTH, YEAR, HOUR, SEASON, START, END, START_noy, END_noy) |&gt; distinct()\n\n# head(df_season)\n# View(df_season |&gt; select(SEASON, START, END) |&gt; distinct())\ndf_oneyear &lt;- df_season |&gt; \n  mutate(DATE = mdy(paste(month(DAY), day(DAY), \"2024\", sep = \"-\"))) |&gt; \n  select(SEASON, START_noy, END_noy, DATE) |&gt; \n  # filter(!(SEASON == \"Winter\" & (month(START_noy) == 12))) |&gt; \n  distinct()\n# head(df_oneyear)\n\n\nTest seasonal plot\n\n\nCode\n# Plot multiple years\nggplot(df_season, aes(x = as_date(DAY))) +\n  geom_rect(data = (filter(df_season, SEASON == \"Fall\")), alpha = 0.2, fill = \"#cc5500\",\n            aes(xmin = START, xmax = END, ymin = 0, ymax = 10000)) +\n  geom_rect(data = (filter(df_season, SEASON == \"Spring\")), alpha = 0.2, fill = \"#bccbae\",\n            aes(xmin = START, xmax = END, ymin = 0, ymax = 10000)) +\n  geom_rect(data = (filter(df_season, SEASON == \"Summer\")), alpha = 0.2, fill = \"#ffbf00\",\n            aes(xmin = START, xmax = END, ymin = 0, ymax = 10000)) +\n  geom_rect(data = (filter(df_season, SEASON == \"Winter\")), alpha = 0.2, fill = \"#5d4e62\",\n            aes(xmin = START, xmax = END, ymin = 0, ymax = 10000))\n\n\n\n\n\n\n\n\n\nCode\n# Plot one year\nggplot(df_oneyear, aes(x = as_date(DATE))) +\n  geom_rect(data = (filter(df_oneyear, SEASON == \"Fall\")), alpha = 0.2, fill = \"#cc5500\",\n            aes(xmin = START_noy, xmax = END_noy, ymin = 0, ymax = 10000)) +\n  geom_rect(data = (filter(df_oneyear, SEASON == \"Spring\")), alpha = 0.2, fill = \"#bccbae\",\n            aes(xmin = START_noy, xmax = END_noy, ymin = 0, ymax = 10000)) +\n  geom_rect(data = (filter(df_oneyear, SEASON == \"Summer\")), alpha = 0.2, fill = \"#ffbf00\",\n            aes(xmin = START_noy, xmax = END_noy, ymin = 0, ymax = 10000)) +\n  geom_rect(data = (filter(df_oneyear, SEASON == \"Winter\")), alpha = 0.2, fill = \"#5d4e62\",\n            aes(xmin = as_date(\"2024-01-01\"), xmax = END_noy, ymin = 0, ymax = 10000)) +\n  geom_rect(data = (filter(df_oneyear, SEASON == \"Winter\")), alpha = 0.2, fill = \"#5d4e62\",\n            aes(xmin = START_noy, xmax = as_date(\"2024-12-31\"), ymin = 0, ymax = 10000))\n\n\n\n\n\n\n\n\n\nCombine with existing data frame.\n\n\nCode\ncombined_gom_long_season &lt;- combined_gom_long %&gt;% \n  left_join(df_season %&gt;% select(DAY, SEASON, START, END)) %&gt;%\n  mutate(day_noyear = paste(MONTH, day(DAY), \"2024\", sep = \"-\")) |&gt; \n  mutate(DAY_NOYEAR = mdy(day_noyear)) |&gt; select(-day_noyear)\n\n\nJoining with `by = join_by(DAY)`\n\n\nCode\n# unique(df_season$SEASON)\n# unique(combined_gom_long_season$SEASON)"
  },
  {
    "objectID": "ifcb-data-wrangle.html#ptat2-data",
    "href": "ifcb-data-wrangle.html#ptat2-data",
    "title": "ifcb-port aransas",
    "section": "3.1 PTAT2 data",
    "text": "3.1 PTAT2 data\nSiddarth\n\n\nCode\nfolder_path &lt;- \"/Users/skhu/Desktop/Projects/GoM-IFCB-PortAransas/input-data/PTAT2/Standard-Meterological-Data/\"\nfile_list &lt;- list.files(folder_path, pattern = \"*.txt\", full.names = TRUE)\n\n# Print the list of files to ensure they are correctly detected\nprint(file_list)\n\n\n [1] \"/Users/skhu/Desktop/Projects/GoM-IFCB-PortAransas/input-data/PTAT2/Standard-Meterological-Data//Standard Meteorological Data 2008.txt\"\n [2] \"/Users/skhu/Desktop/Projects/GoM-IFCB-PortAransas/input-data/PTAT2/Standard-Meterological-Data//Standard Meteorological Data 2009.txt\"\n [3] \"/Users/skhu/Desktop/Projects/GoM-IFCB-PortAransas/input-data/PTAT2/Standard-Meterological-Data//Standard Meteorological Data 2010.txt\"\n [4] \"/Users/skhu/Desktop/Projects/GoM-IFCB-PortAransas/input-data/PTAT2/Standard-Meterological-Data//Standard Meteorological Data 2011.txt\"\n [5] \"/Users/skhu/Desktop/Projects/GoM-IFCB-PortAransas/input-data/PTAT2/Standard-Meterological-Data//Standard Meteorological Data 2012.txt\"\n [6] \"/Users/skhu/Desktop/Projects/GoM-IFCB-PortAransas/input-data/PTAT2/Standard-Meterological-Data//Standard Meteorological Data 2013.txt\"\n [7] \"/Users/skhu/Desktop/Projects/GoM-IFCB-PortAransas/input-data/PTAT2/Standard-Meterological-Data//Standard Meteorological Data 2014.txt\"\n [8] \"/Users/skhu/Desktop/Projects/GoM-IFCB-PortAransas/input-data/PTAT2/Standard-Meterological-Data//Standard Meteorological Data 2015.txt\"\n [9] \"/Users/skhu/Desktop/Projects/GoM-IFCB-PortAransas/input-data/PTAT2/Standard-Meterological-Data//Standard Meteorological Data 2016.txt\"\n[10] \"/Users/skhu/Desktop/Projects/GoM-IFCB-PortAransas/input-data/PTAT2/Standard-Meterological-Data//Standard Meteorological Data 2017.txt\"\n\n\nFunction to load and format input data\n\n\nCode\nload_and_preprocess &lt;- function(file_path) {\n  # Read the file, skipping the first two header lines\n  data &lt;- read_table(file_path, skip = 2, col_names = FALSE)\n  \n  # Assign proper column names\n  colnames(data) &lt;- c(\"YY\", \"MM\", \"DD\", \"hh\", \"mm\", \"WDIR\", \"WSPD\", \"GST\", \n                      \"WVHT\", \"DPD\", \"APD\", \"MWD\", \"PRES\", \"ATMP\", \"WTMP\", \n                      \"DEWP\", \"VIS\", \"TIDE\")\n  \n  # Combine date and time columns into a datetime column using lubridate\n  data &lt;- data %&gt;%\n    mutate(\n      YY = as.integer(YY),\n      MM = as.integer(MM),\n      DD = as.integer(DD),\n      hh = as.integer(hh),\n      mm = as.integer(mm),\n      datetime = make_datetime(YY, MM, DD, hh, mm)  # Ensure hourly accuracy\n    )\n  \n  return(data)\n}\n\n\n\n\nCode\n# Load and merge all data files\nall_data &lt;- file_list %&gt;%\n  lapply(load_and_preprocess) %&gt;%\n  bind_rows()\n\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  X1 = col_double(),\n  X2 = col_character(),\n  X3 = col_character(),\n  X4 = col_character(),\n  X5 = col_character(),\n  X6 = col_double(),\n  X7 = col_double(),\n  X8 = col_double(),\n  X9 = col_double(),\n  X10 = col_double(),\n  X11 = col_double(),\n  X12 = col_double(),\n  X13 = col_double(),\n  X14 = col_double(),\n  X15 = col_double(),\n  X16 = col_double(),\n  X17 = col_double(),\n  X18 = col_double()\n)\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  X1 = col_double(),\n  X2 = col_character(),\n  X3 = col_character(),\n  X4 = col_character(),\n  X5 = col_character(),\n  X6 = col_double(),\n  X7 = col_double(),\n  X8 = col_double(),\n  X9 = col_double(),\n  X10 = col_double(),\n  X11 = col_double(),\n  X12 = col_double(),\n  X13 = col_double(),\n  X14 = col_double(),\n  X15 = col_double(),\n  X16 = col_double(),\n  X17 = col_double(),\n  X18 = col_double()\n)\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  X1 = col_double(),\n  X2 = col_character(),\n  X3 = col_character(),\n  X4 = col_character(),\n  X5 = col_character(),\n  X6 = col_double(),\n  X7 = col_double(),\n  X8 = col_double(),\n  X9 = col_double(),\n  X10 = col_double(),\n  X11 = col_double(),\n  X12 = col_double(),\n  X13 = col_double(),\n  X14 = col_double(),\n  X15 = col_double(),\n  X16 = col_double(),\n  X17 = col_double(),\n  X18 = col_double()\n)\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  X1 = col_double(),\n  X2 = col_character(),\n  X3 = col_character(),\n  X4 = col_character(),\n  X5 = col_character(),\n  X6 = col_double(),\n  X7 = col_double(),\n  X8 = col_double(),\n  X9 = col_double(),\n  X10 = col_double(),\n  X11 = col_double(),\n  X12 = col_double(),\n  X13 = col_double(),\n  X14 = col_double(),\n  X15 = col_double(),\n  X16 = col_double(),\n  X17 = col_double(),\n  X18 = col_double()\n)\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  X1 = col_double(),\n  X2 = col_character(),\n  X3 = col_character(),\n  X4 = col_character(),\n  X5 = col_character(),\n  X6 = col_double(),\n  X7 = col_double(),\n  X8 = col_double(),\n  X9 = col_double(),\n  X10 = col_double(),\n  X11 = col_double(),\n  X12 = col_double(),\n  X13 = col_double(),\n  X14 = col_double(),\n  X15 = col_double(),\n  X16 = col_double(),\n  X17 = col_double(),\n  X18 = col_double()\n)\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  X1 = col_double(),\n  X2 = col_character(),\n  X3 = col_character(),\n  X4 = col_character(),\n  X5 = col_character(),\n  X6 = col_double(),\n  X7 = col_double(),\n  X8 = col_double(),\n  X9 = col_double(),\n  X10 = col_double(),\n  X11 = col_double(),\n  X12 = col_double(),\n  X13 = col_double(),\n  X14 = col_double(),\n  X15 = col_double(),\n  X16 = col_double(),\n  X17 = col_double(),\n  X18 = col_double()\n)\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  X1 = col_double(),\n  X2 = col_character(),\n  X3 = col_character(),\n  X4 = col_character(),\n  X5 = col_character(),\n  X6 = col_double(),\n  X7 = col_double(),\n  X8 = col_double(),\n  X9 = col_double(),\n  X10 = col_double(),\n  X11 = col_double(),\n  X12 = col_double(),\n  X13 = col_double(),\n  X14 = col_double(),\n  X15 = col_double(),\n  X16 = col_double(),\n  X17 = col_double(),\n  X18 = col_double()\n)\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  X1 = col_double(),\n  X2 = col_character(),\n  X3 = col_character(),\n  X4 = col_character(),\n  X5 = col_character(),\n  X6 = col_double(),\n  X7 = col_double(),\n  X8 = col_double(),\n  X9 = col_double(),\n  X10 = col_double(),\n  X11 = col_double(),\n  X12 = col_double(),\n  X13 = col_double(),\n  X14 = col_double(),\n  X15 = col_double(),\n  X16 = col_double(),\n  X17 = col_double(),\n  X18 = col_double()\n)\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  X1 = col_double(),\n  X2 = col_character(),\n  X3 = col_character(),\n  X4 = col_character(),\n  X5 = col_character(),\n  X6 = col_double(),\n  X7 = col_double(),\n  X8 = col_double(),\n  X9 = col_double(),\n  X10 = col_double(),\n  X11 = col_double(),\n  X12 = col_double(),\n  X13 = col_double(),\n  X14 = col_double(),\n  X15 = col_double(),\n  X16 = col_double(),\n  X17 = col_double(),\n  X18 = col_double()\n)\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  X1 = col_double(),\n  X2 = col_character(),\n  X3 = col_character(),\n  X4 = col_character(),\n  X5 = col_character(),\n  X6 = col_double(),\n  X7 = col_double(),\n  X8 = col_double(),\n  X9 = col_double(),\n  X10 = col_double(),\n  X11 = col_double(),\n  X12 = col_double(),\n  X13 = col_double(),\n  X14 = col_double(),\n  X15 = col_double(),\n  X16 = col_double(),\n  X17 = col_double(),\n  X18 = col_double()\n)\n\n\nCode\n# Check the combined dataset\nprint(dim(all_data))  # Print the dimensions of the data\n\n\n[1] 81535    19\n\n\nCode\nprint(head(all_data))  # View the first few rows\n\n\n# A tibble: 6 × 19\n     YY    MM    DD    hh    mm  WDIR  WSPD   GST  WVHT   DPD   APD   MWD  PRES\n  &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  2008     1     1     0     0    52   3.2   3.3    99    99    99   999 1019.\n2  2008     1     1     1     0    57   4     4.3    99    99    99   999 1020.\n3  2008     1     1     2     0    61   4.4   4.7    99    99    99   999 1020.\n4  2008     1     1     3     0    48   3.8   4      99    99    99   999 1022.\n5  2008     1     1     4     0     4  12.4  14.8    99    99    99   999 1024.\n6  2008     1     1     5     0     3  11.6  12.7    99    99    99   999 1026.\n# ℹ 6 more variables: ATMP &lt;dbl&gt;, WTMP &lt;dbl&gt;, DEWP &lt;dbl&gt;, VIS &lt;dbl&gt;,\n#   TIDE &lt;dbl&gt;, datetime &lt;dttm&gt;\n\n\nCode\n# range(all_data$datetime)\n\n\n\n\nCode\n# Extract year for aggregation\nhead(all_data)\n\n\n# A tibble: 6 × 19\n     YY    MM    DD    hh    mm  WDIR  WSPD   GST  WVHT   DPD   APD   MWD  PRES\n  &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  2008     1     1     0     0    52   3.2   3.3    99    99    99   999 1019.\n2  2008     1     1     1     0    57   4     4.3    99    99    99   999 1020.\n3  2008     1     1     2     0    61   4.4   4.7    99    99    99   999 1020.\n4  2008     1     1     3     0    48   3.8   4      99    99    99   999 1022.\n5  2008     1     1     4     0     4  12.4  14.8    99    99    99   999 1024.\n6  2008     1     1     5     0     3  11.6  12.7    99    99    99   999 1026.\n# ℹ 6 more variables: ATMP &lt;dbl&gt;, WTMP &lt;dbl&gt;, DEWP &lt;dbl&gt;, VIS &lt;dbl&gt;,\n#   TIDE &lt;dbl&gt;, datetime &lt;dttm&gt;\n\n\nCode\nall_data &lt;- all_data %&gt;%\n  unite(day, YY, MM, DD, sep = \"-\", remove = FALSE) %&gt;% \n  mutate(year = format(datetime, \"%Y\"))\n\n# Group by year and calculate averages\nyearly_data &lt;- all_data %&gt;%\n  group_by(year) %&gt;%\n  summarize(\n    avg_ATMP = mean(as.numeric(ATMP), na.rm = TRUE),\n    avg_WTMP = mean(as.numeric(WTMP), na.rm = TRUE)\n  )\n\n# Convert year to a numeric format for plotting\nyearly_data$year &lt;- as.numeric(yearly_data$year)\n\n# Check the aggregated data\nprint(head(yearly_data))\n\n\n# A tibble: 6 × 3\n   year avg_ATMP avg_WTMP\n  &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1  2008     22.0     23.0\n2  2009     21.9     23.1\n3  2010     22.1     23.0\n4  2011     22.9     24.0\n5  2012     21.2     22.4\n6  2013     21.4     22.8\n\n\nCode\n# Create a full sequence of years\nfull_years &lt;- data.frame(year = 2008:2017)\n\n# Merge the full sequence with the aggregated data\nyearly_data &lt;- full_years %&gt;%\n  left_join(yearly_data, by = \"year\")\n\n# Check the updated yearly data\nprint(yearly_data)\n\n\n   year avg_ATMP avg_WTMP\n1  2008 22.02410 22.96778\n2  2009 21.94901 23.09573\n3  2010 22.08748 23.02820\n4  2011 22.94167 23.98222\n5  2012 21.23427 22.40061\n6  2013 21.38696 22.77235\n7  2014 21.05397 22.23501\n8  2015 22.06857 23.14657\n9  2016 23.38357 24.71794\n10 2017 23.29741 28.08312\n\n\n\n\nCode\n# Plot the yearly averages\nggplot(yearly_data, aes(x = year)) +\n  geom_line(aes(y = avg_ATMP, color = \"ATMP\"), na.rm = TRUE) +\n  geom_line(aes(y = avg_WTMP, color = \"WTMP\"), na.rm = TRUE) +\n  scale_x_continuous(\n    breaks = 2008:2017,  # Show all years explicitly\n    labels = 2008:2017\n  ) +\n  labs(\n    title = \"Yearly Average of ATMP and WTMP (2008-2017)\",\n    x = \"Year\",\n    y = \"Temperature (°C)\",\n    color = \"Parameter\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotate x-axis labels if needed\n\n\n\n\n\n\n\n\n\n\nSiddarth, add in temperature and tidal"
  },
  {
    "objectID": "ifcb-data-wrangle.html#combine-with-ifcb-data",
    "href": "ifcb-data-wrangle.html#combine-with-ifcb-data",
    "title": "ifcb-port aransas",
    "section": "3.2 Combine with IFCB data",
    "text": "3.2 Combine with IFCB data\n\n\nCode\nhead(combined_gom_long_season)\n\n\n# A tibble: 6 × 21\n  DAY                 DATE       MONTH  HOUR CELL_ID            CARBON\n  &lt;dttm&gt;              &lt;date&gt;     &lt;dbl&gt; &lt;int&gt; &lt;chr&gt;               &lt;dbl&gt;\n1 2008-01-01 00:00:00 2008-01-01     1     0 Akashiwo          159.   \n2 2008-01-01 00:00:00 2008-01-01     1     0 Anabaena            0.559\n3 2008-01-01 00:00:00 2008-01-01     1     0 Apedinella        227.   \n4 2008-01-01 00:00:00 2008-01-01     1     0 Asterionellopsis   10.4  \n5 2008-01-01 00:00:00 2008-01-01     1     0 Beads             357.   \n6 2008-01-01 00:00:00 2008-01-01     1     0 Centric          2285.   \n# ℹ 15 more variables: COURSE_CLASSIFICATION &lt;chr&gt;, TYPE &lt;chr&gt;, Domain &lt;chr&gt;,\n#   Supergroup &lt;chr&gt;, Phylum &lt;chr&gt;, Class &lt;chr&gt;, Order &lt;chr&gt;, Family &lt;chr&gt;,\n#   Genus &lt;chr&gt;, Species &lt;chr&gt;, COUNT &lt;dbl&gt;, SEASON &lt;chr&gt;, START &lt;date&gt;,\n#   END &lt;date&gt;, DAY_NOYEAR &lt;date&gt;\n\n\nCode\nhead(all_data)\n\n\n# A tibble: 6 × 21\n  day       YY    MM    DD    hh    mm  WDIR  WSPD   GST  WVHT   DPD   APD   MWD\n  &lt;chr&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 2008-…  2008     1     1     0     0    52   3.2   3.3    99    99    99   999\n2 2008-…  2008     1     1     1     0    57   4     4.3    99    99    99   999\n3 2008-…  2008     1     1     2     0    61   4.4   4.7    99    99    99   999\n4 2008-…  2008     1     1     3     0    48   3.8   4      99    99    99   999\n5 2008-…  2008     1     1     4     0     4  12.4  14.8    99    99    99   999\n6 2008-…  2008     1     1     5     0     3  11.6  12.7    99    99    99   999\n# ℹ 8 more variables: PRES &lt;dbl&gt;, ATMP &lt;dbl&gt;, WTMP &lt;dbl&gt;, DEWP &lt;dbl&gt;,\n#   VIS &lt;dbl&gt;, TIDE &lt;dbl&gt;, datetime &lt;dttm&gt;, year &lt;chr&gt;\n\n\nCode\nunique(combined_gom_long_season$SEASON)\n\n\n[1] \"Winter\" \"Spring\" \"Summer\" \"Fall\"  \n\n\nCode\ncombined_biol_metadata &lt;- all_data %&gt;% \n  select(day, YY, MM, DD, hh, mm, WDIR, WSPD, MWD, PRES, ATMP, WTMP, TIDE) %&gt;% \n  mutate(DAY = ymd(day),\n         MONTH = month(DAY),\n         HOUR = hour(hh)) %&gt;% \n  right_join(combined_gom_long_season, by = join_by(DAY, MONTH, HOUR))\n\n\nWarning: There was 1 warning in `mutate()`.\nℹ In argument: `HOUR = hour(hh)`.\nCaused by warning:\n! tz(): Don't know how to compute timezone for object of class integer; returning \"UTC\".\n\n\nWarning in right_join(., combined_gom_long_season, by = join_by(DAY, MONTH, : Detected an unexpected many-to-many relationship between `x` and `y`.\nℹ Row 1 of `x` matches multiple rows in `y`.\nℹ Row 1 of `y` matches multiple rows in `x`.\nℹ If a many-to-many relationship is expected, set `relationship =\n  \"many-to-many\"` to silence this warning.\n\n\nCode\ncolnames(combined_biol_metadata)\n\n\n [1] \"day\"                   \"YY\"                    \"MM\"                   \n [4] \"DD\"                    \"hh\"                    \"mm\"                   \n [7] \"WDIR\"                  \"WSPD\"                  \"MWD\"                  \n[10] \"PRES\"                  \"ATMP\"                  \"WTMP\"                 \n[13] \"TIDE\"                  \"DAY\"                   \"MONTH\"                \n[16] \"HOUR\"                  \"DATE\"                  \"CELL_ID\"              \n[19] \"CARBON\"                \"COURSE_CLASSIFICATION\" \"TYPE\"                 \n[22] \"Domain\"                \"Supergroup\"            \"Phylum\"               \n[25] \"Class\"                 \"Order\"                 \"Family\"               \n[28] \"Genus\"                 \"Species\"               \"COUNT\"                \n[31] \"SEASON\"                \"START\"                 \"END\"                  \n[34] \"DAY_NOYEAR\"           \n\n\nCode\nunique(combined_biol_metadata$SEASON)\n\n\n[1] \"Winter\" \"Spring\" \"Summer\" \"Fall\"  \n\n\nCode\nhead(combined_biol_metadata)\n\n\n# A tibble: 6 × 34\n  day       YY    MM    DD    hh    mm  WDIR  WSPD   MWD  PRES  ATMP  WTMP  TIDE\n  &lt;chr&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n2 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n3 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n4 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n5 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n6 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n# ℹ 21 more variables: DAY &lt;dttm&gt;, MONTH &lt;dbl&gt;, HOUR &lt;int&gt;, DATE &lt;date&gt;,\n#   CELL_ID &lt;chr&gt;, CARBON &lt;dbl&gt;, COURSE_CLASSIFICATION &lt;chr&gt;, TYPE &lt;chr&gt;,\n#   Domain &lt;chr&gt;, Supergroup &lt;chr&gt;, Phylum &lt;chr&gt;, Class &lt;chr&gt;, Order &lt;chr&gt;,\n#   Family &lt;chr&gt;, Genus &lt;chr&gt;, Species &lt;chr&gt;, COUNT &lt;dbl&gt;, SEASON &lt;chr&gt;,\n#   START &lt;date&gt;, END &lt;date&gt;, DAY_NOYEAR &lt;date&gt;\n\n\nStandard Meteorological Data:\nWDIR - Wind direction (the direction the wind is coming from in degrees clockwise from true N) during the same period used for WSPD. See Wind Averaging Methods\nWSPD - Wind speed (m/s) averaged over an eight-minute period for buoys and a two-minute period for land stations. Reported Hourly. See Wind Averaging Methods.\nGST - Peak 5 or 8 second gust speed (m/s) measured during the eight-minute or two-minute period. The 5 or 8 second period can be determined by payload, See the Sensor Reporting, Sampling, and Accuracy section.\nWVHT - Significant wave height (meters) is calculated as the average of the highest one-third of all of the wave heights during the 20-minute sampling period. See the Wave Measurements section.\nDPD - Dominant wave period (seconds) is the period with the maximum wave energy. See the Wave Measurements section.\nADP - Average wave period (seconds) of all waves during the 20-minute period. See the Wave Measurements section.\nMWD - The direction from which the waves at the dominant period (DPD) are coming. The units are degrees from true North, increasing clockwise, with North as 0 (zero) degrees and East as 90 degrees. See the Wave Measurements section.\nPRES - Sea level pressure (hPa). For C-MAN sites and Great Lakes buoys, the recorded pressure is reduced to sea level using the method described in NWS Technical Procedures Bulletin 291 (11/14/80). ( labeled BAR in Historical files)\nATMP - Air temperature (Celsius). For sensor heights on buoys, see Hull Descriptions. For sensor heights at C-MAN stations, see C-MAN Sensor Locations\nWTMP - Sea surface temperature (Celsius). For buoys the depth is referenced to the hull’s waterline. For fixed platforms it varies with tide, but is referenced to, or near Mean Lower Low Water (MLLW).\nDEWP - Dewpoint temperature taken at the same height as the air temperature measurement.\nVIS - Station visibility (nautical miles). Note that buoy stations are limited to reports from 0 to 1.6 nmi.\nPTDY - Pressure Tendency is the direction (plus or minus) and the amount of pressure change (hPa)for a three hour period ending at the time of observation. (not in Historical files)\nTIDE - The water level in feet above or below Mean Lower Low Water (MLLW).\n\n\nCode\nhead(combined_biol_metadata)\n\n\n# A tibble: 6 × 34\n  day       YY    MM    DD    hh    mm  WDIR  WSPD   MWD  PRES  ATMP  WTMP  TIDE\n  &lt;chr&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n2 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n3 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n4 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n5 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n6 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n# ℹ 21 more variables: DAY &lt;dttm&gt;, MONTH &lt;dbl&gt;, HOUR &lt;int&gt;, DATE &lt;date&gt;,\n#   CELL_ID &lt;chr&gt;, CARBON &lt;dbl&gt;, COURSE_CLASSIFICATION &lt;chr&gt;, TYPE &lt;chr&gt;,\n#   Domain &lt;chr&gt;, Supergroup &lt;chr&gt;, Phylum &lt;chr&gt;, Class &lt;chr&gt;, Order &lt;chr&gt;,\n#   Family &lt;chr&gt;, Genus &lt;chr&gt;, Species &lt;chr&gt;, COUNT &lt;dbl&gt;, SEASON &lt;chr&gt;,\n#   START &lt;date&gt;, END &lt;date&gt;, DAY_NOYEAR &lt;date&gt;"
  },
  {
    "objectID": "ifcb-data-wrangle.html#save-import-data-locally",
    "href": "ifcb-data-wrangle.html#save-import-data-locally",
    "title": "ifcb-port aransas",
    "section": "3.3 Save / import data locally",
    "text": "3.3 Save / import data locally\n\n\nCode\nsave(combined_gom_long_season, combined_biol_metadata, df_season, all_data, file = \"input-data/data_annotated_wtax_wseason.RData\")"
  },
  {
    "objectID": "ifcb-data-wrangle.html#cells-carbon-and-carbon-per-cell-for-specific-groups",
    "href": "ifcb-data-wrangle.html#cells-carbon-and-carbon-per-cell-for-specific-groups",
    "title": "ifcb-port aransas",
    "section": "4.1 Cells, Carbon, and carbon per cell for specific groups:",
    "text": "4.1 Cells, Carbon, and carbon per cell for specific groups:\nCarbon units are pgC per cell; Cells are cells per ml.\ncell * carbon = pgC per ml\n\n\nCode\nhead(combined_biol_metadata)\n\n\n# A tibble: 6 × 34\n  day       YY    MM    DD    hh    mm  WDIR  WSPD   MWD  PRES  ATMP  WTMP  TIDE\n  &lt;chr&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n2 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n3 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n4 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n5 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n6 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n# ℹ 21 more variables: DAY &lt;dttm&gt;, MONTH &lt;dbl&gt;, HOUR &lt;int&gt;, DATE &lt;date&gt;,\n#   CELL_ID &lt;chr&gt;, CARBON &lt;dbl&gt;, COURSE_CLASSIFICATION &lt;chr&gt;, TYPE &lt;chr&gt;,\n#   Domain &lt;chr&gt;, Supergroup &lt;chr&gt;, Phylum &lt;chr&gt;, Class &lt;chr&gt;, Order &lt;chr&gt;,\n#   Family &lt;chr&gt;, Genus &lt;chr&gt;, Species &lt;chr&gt;, COUNT &lt;dbl&gt;, SEASON &lt;chr&gt;,\n#   START &lt;date&gt;, END &lt;date&gt;, DAY_NOYEAR &lt;date&gt;\n\n\nCode\nplot_biotic &lt;- combined_biol_metadata %&gt;% \n  mutate(pgC_ml = COUNT * CARBON) %&gt;% \n  select(DATE, CELL_ID, COURSE_CLASSIFICATION, TYPE, Domain, Supergroup, Phylum, Class, Order, Family, Genus, Species, SEASON, CARBON, COUNT, pgC_ml, START, END, DAY_NOYEAR)\n\n\n\nPlot biotic - all years\nWe want to add information to the dates for when there are Karenia notifications and a data gap.\n\n\nCode\nkar_gap &lt;- plot_biotic %&gt;% \n  filter(CELL_ID == \"Karenia_brevis\") %&gt;% \n  mutate(ADD = case_when(\n    (grepl(\"Karenia_brevis\", CELL_ID) & COUNT &gt; 2) ~ \"Notification\")) %&gt;% \n  mutate(WEEK = cut(DATE, \"week\", start.on.monday = TRUE),\n         YEAR = year(as_date(DATE))) %&gt;% \n  select(WEEK, YEAR, ADD) %&gt;% \n  distinct() %&gt;% \n  drop_na()\n\n\n\n\nCode\nvalues_byweek &lt;- plot_biotic %&gt;% \n  filter(COURSE_CLASSIFICATION == \"Microeukaryote\") %&gt;% \n  filter(Supergroup != \"Plantae\" & Supergroup != \"Animalia/Metazoa\") %&gt;% \n  select(-START, -END, -DAY_NOYEAR) %&gt;% \n  pivot_longer(cols = -c(DATE, CELL_ID, COURSE_CLASSIFICATION, TYPE, Domain, Supergroup, Phylum, Class, Order, Family, Genus, Species, SEASON), names_to = \"VARIABLE\", values_to = \"VALUE\") %&gt;% \n  distinct() %&gt;% \n  # Average the variable PER day for a single Cell ID type\n  group_by(VARIABLE, DATE, CELL_ID, SEASON) %&gt;% \n    summarise(MEAN_bycell_day = mean(VALUE)) %&gt;% \n  ungroup() %&gt;% \n  # Sum total cells for a single day\n  group_by(DATE, SEASON, VARIABLE) %&gt;% \n    summarise(SUM_byday = sum(MEAN_bycell_day)) %&gt;% \n  ungroup() %&gt;% \n  # Add a column to specify the WEEK - have week start on Mondays\n  mutate(WEEK = cut(DATE, \"week\", start.on.monday = TRUE),\n         MONTH = month(as_date(DATE)),\n         YEAR = year(as_date(DATE))) %&gt;% \n  # Get mean, min, and max for each week\n  group_by(WEEK, SEASON, YEAR, VARIABLE) %&gt;% \n    summarise(MEAN_WEEK = mean(SUM_byday),\n              MAX_WEEK = max(SUM_byday),\n              MIN_WEEK = min(SUM_byday)) \n\n\n`summarise()` has grouped output by 'VARIABLE', 'DATE', 'CELL_ID'. You can\noverride using the `.groups` argument.\n`summarise()` has grouped output by 'DATE', 'SEASON'. You can override using\nthe `.groups` argument.\n`summarise()` has grouped output by 'WEEK', 'SEASON', 'YEAR'. You can override\nusing the `.groups` argument.\n\n\nCode\nhead(values_byweek)\n\n\n# A tibble: 6 × 7\n# Groups:   WEEK, SEASON, YEAR [2]\n  WEEK       SEASON  YEAR VARIABLE MEAN_WEEK MAX_WEEK MIN_WEEK\n  &lt;fct&gt;      &lt;chr&gt;  &lt;dbl&gt; &lt;chr&gt;        &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n1 2007-12-31 Winter  2008 CARBON      56195.   82761.  37467. \n2 2007-12-31 Winter  2008 COUNT         310.     373.    263. \n3 2007-12-31 Winter  2008 pgC_ml    1124443. 1581473. 709056. \n4 2008-01-07 Winter  2008 CARBON      49301.   94753.  19648. \n5 2008-01-07 Winter  2008 COUNT         203.     494.     29.2\n6 2008-01-07 Winter  2008 pgC_ml     918768. 2670613.  19474. \n\n\n\n\nCode\noneyr_counts &lt;- values_byweek %&gt;% \n  mutate(VARIABLE_LABEL = factor(VARIABLE, levels = c(\"COUNT\", \"CARBON\", \"pgC_ml\"), labels = c(bquote(\"Cells\"~ml^-1), bquote(\"pg Carbon\"~cell^-1), bquote(\"pg Carbon\"~ml^-1)))) %&gt;% \n  ggplot(aes(x = as_date(WEEK), y = MEAN_WEEK)) + \n    geom_line(color = \"black\", alpha = 0.4) +\n    geom_linerange(aes(ymin = MIN_WEEK, ymax = MAX_WEEK, color = SEASON, alpha = 0.5), linewidth = 0.5) +\n    geom_point(shape = 19, size = 2, aes(color = SEASON)) +\n  theme_classic() +\n  facet_grid(rows = vars(VARIABLE_LABEL), scales = \"free\", \n             labeller = label_parsed, switch = \"y\") +\n  scale_x_date(date_labels = \"%b %y\", expand = c(0,0), date_breaks = \"3 months\", date_minor_breaks = \"month\") +\n  scale_color_manual(values = c(\"#cc5500\",\"#bccbae\",\"#ffbf00\",\"#5d4e62\")) +\n  scale_y_log10() +\n  labs(x = \"IFCB time series\", y = \"\") +\n  theme(legend.position = \"bottom\", legend.title = element_blank(),\n        strip.text.y = element_text(color = \"black\", face = \"bold\", size = 14),\n        strip.background = element_blank(),\n        strip.placement = \"outside\",\n        axis.text.x = element_text(color = \"black\", face = \"bold\", size = 14),\n        axis.title = element_text(color = \"black\", face = \"bold\", size = 14),\n        axis.text.y = element_text(color = \"black\", face = \"bold\", size = 14),\n        panel.grid.major = element_line(color = \"#d9d9d9\", linewidth = 0.3)) +\n  geom_point(data = (kar_gap %&gt;% filter(ADD == \"Notification\")), aes(x = as_date(WEEK), y = 10000), shape = 19, color = \"red\", alpha = 0.6)\n# labs(y = bquote(\"FLP cells \" ~ mL^-1), x = \"Incubation hours\") + \noneyr_counts\n\n\n\n\n\n\n\n\n\nCode\n  # geom_point(data = (kar_gap %&gt;% filter(ADD == \"Notification\")), aes(x = as_date(WEEK), y = 10000), shape = 19, color = \"red\", alpha = 0.6) +\n  # geom_point(data = (kar_gap %&gt;% filter(ADD != \"Notification\")), aes(x = as_date(WEEK), y = 0), size = 3, alpha = 0.6, shape = 17, color = \"#bdbdbd\")\n\n\n\nThis is a good supplementary figure or summary figure for a poster explaining the IFCB.\n\n\n\nPlot biotic - one year\n\n\nCode\nhead(plot_biotic)\n\n\n# A tibble: 6 × 19\n  DATE       CELL_ID  COURSE_CLASSIFICATION TYPE  Domain Supergroup Phylum Class\n  &lt;date&gt;     &lt;chr&gt;    &lt;chr&gt;                 &lt;chr&gt; &lt;chr&gt;  &lt;chr&gt;      &lt;chr&gt;  &lt;chr&gt;\n1 2008-01-01 Akashiwo Microeukaryote        Cell  \"Euka… \"Alveolat… \"Dino… \"Din…\n2 2008-01-01 Anabaena Cyanobacteria         Cell  \"Bact… \"Cyanobac… \"Cyan… \"Cya…\n3 2008-01-01 Apedine… Microeukaryote        Cell  \"Euka… \"Strameno… \"Ochr… \"Dic…\n4 2008-01-01 Asterio… Microeukaryote        Cell  \"Euka… \"Strameno… \"Ochr… \"Bac…\n5 2008-01-01 Beads    IFCB excess           Non-… \"\"     \"\"         \"\"     \"\"   \n6 2008-01-01 Centric  Microeukaryote        Cell… \"Euka… \"Strameno… \"Ochr… \"Bac…\n# ℹ 11 more variables: Order &lt;chr&gt;, Family &lt;chr&gt;, Genus &lt;chr&gt;, Species &lt;chr&gt;,\n#   SEASON &lt;chr&gt;, CARBON &lt;dbl&gt;, COUNT &lt;dbl&gt;, pgC_ml &lt;dbl&gt;, START &lt;date&gt;,\n#   END &lt;date&gt;, DAY_NOYEAR &lt;date&gt;\n\n\nCode\nbiotic_1yr &lt;- plot_biotic %&gt;% \n  # Group by cell ID to get mean for a single day\n  group_by(DAY_NOYEAR, DATE, CELL_ID, SEASON, COURSE_CLASSIFICATION) %&gt;% \n    summarise(PER_DAY_CELL = mean(COUNT),\n              PER_DAY_CARBON = mean(CARBON),\n              PER_DAY_CARBON_ml = mean(pgC_ml)) %&gt;% \n  ungroup() %&gt;% \n  # NOW sum up the different cell types that contribute to the course classification per day\n  group_by(DAY_NOYEAR, DATE, SEASON, COURSE_CLASSIFICATION) %&gt;% \n    summarise(PER_DAY_COURSE_CELL = sum(PER_DAY_CELL),\n              PER_DAY_COURSE_CARBON = sum(PER_DAY_CARBON),\n              PER_DAY_COURSE_CARBONml = sum(PER_DAY_CARBON_ml)) %&gt;% \n  ungroup() %&gt;% \n  # Now average by year\n  group_by(DAY_NOYEAR, COURSE_CLASSIFICATION, SEASON) %&gt;%  \n    summarise(MEAN_COUNTS_1yr = mean(PER_DAY_COURSE_CELL),\n              MEAN_CARBON_1yr = mean(PER_DAY_COURSE_CARBON),\n              MEAN_CARBONml_1yr = mean(PER_DAY_COURSE_CARBONml)) \n\n\n`summarise()` has grouped output by 'DAY_NOYEAR', 'DATE', 'CELL_ID', 'SEASON'.\nYou can override using the `.groups` argument.\n`summarise()` has grouped output by 'DAY_NOYEAR', 'DATE', 'SEASON'. You can\noverride using the `.groups` argument.\n`summarise()` has grouped output by 'DAY_NOYEAR', 'COURSE_CLASSIFICATION'. You\ncan override using the `.groups` argument.\n\n\nCode\nhead(biotic_1yr)\n\n\n# A tibble: 6 × 6\n# Groups:   DAY_NOYEAR, COURSE_CLASSIFICATION [6]\n  DAY_NOYEAR COURSE_CLASSIFICATION SEASON MEAN_COUNTS_1yr MEAN_CARBON_1yr\n  &lt;date&gt;     &lt;chr&gt;                 &lt;chr&gt;            &lt;dbl&gt;           &lt;dbl&gt;\n1 2024-01-01 Bacteria              Winter          0.105            219. \n2 2024-01-01 Biol unknown          Winter        172.             89911. \n3 2024-01-01 Cyanobacteria         Winter          0.501             26.5\n4 2024-01-01 IFCB excess           Winter         17.5             8746. \n5 2024-01-01 Larvae                Winter          0.0793          1656. \n6 2024-01-01 Microeukaryote        Winter        206.             75643. \n# ℹ 1 more variable: MEAN_CARBONml_1yr &lt;dbl&gt;\n\n\n\n\nCode\nYMAX &lt;- max(biotic_1yr$MEAN_CARBON_1yr)\nYMAX &lt;-0\n# YMAX\nbiotic_1yr %&gt;% \n  pivot_longer(cols = starts_with(\"MEAN_\")) %&gt;% \n  mutate(VARIABLE_LABEL = factor(name, levels = c(\"MEAN_COUNTS_1yr\", \"MEAN_CARBON_1yr\", \"MEAN_CARBONml_1yr\"), labels = c(bquote(\"Cells\"~ml^-1), bquote(\"pg Carbon\"~cell^-1), bquote(\"pg Carbon\"~ml^-1)))) %&gt;% \n  ggplot(aes(x = DAY_NOYEAR, y = value, fill = COURSE_CLASSIFICATION)) + \n  geom_area(position = \"stack\") +\n  theme_classic() +\n  scale_x_date(date_labels = \"%b\", expand = c(0,0)) +\n  scale_y_continuous(expand = c(0,0)) +\n  facet_grid(rows = vars(VARIABLE_LABEL), scales = \"free\", labeller = label_parsed) +\n  labs(x = \"\", y = \"\") +\n  scale_fill_manual(values = c(\"#fead5d\", \"#1468b3\",\"#00ac43\",\"#f6f86d\",\"#fc7e66\", \"#c304aa\")) +\n  theme(legend.position = \"bottom\", legend.title = element_blank(),\n        axis.text.x = element_text(color = \"black\", face = \"bold\", size = 12),\n        axis.text.y = element_text(color = \"black\", face = \"bold\", size = 12),\n        strip.background = element_blank()) +\n  geom_rect(xmin = as_date(\"2024-09-01\"), xmax = as_date(\"2024-11-30\"), ymin = (YMAX), ymax = (YMAX+40), alpha = 0.2, fill = \"#cc5500\") +\n  geom_rect(xmin = as_date(\"2024-03-01\"), xmax = as_date(\"2024-5-31\"), ymin = (YMAX), ymax = (YMAX+40), alpha = 0.2, fill = \"#bccbae\") +\n  geom_rect(xmin = as_date(\"2024-06-01\"), xmax = as_date(\"2024-08-31\"), ymin = (YMAX), ymax = (YMAX+40), alpha = 0.2, fill = \"#ffbf00\") +\n  geom_rect(xmin = as_date(\"2024-12-01\"), xmax = as_date(\"2024-12-31\"), ymin = (YMAX), ymax = (YMAX+40), alpha = 0.2, fill = \"#5d4e62\") +\n  geom_rect(xmin = as_date(\"2024-01-01\"), xmax = as_date(\"2024-02-29\"), ymin = (YMAX), ymax = (YMAX+40),, alpha = 0.2, fill = \"#5d4e62\")\n\n\n\n\n\n\n\n\n\nCode\n#Spring = March 1 - May 31 \n#Summer = June 1 - Aug 31 \n#Fall = Sept 1 - Nov 30 \n#Winter = Dec 1 - Feb (March 1 (-1))\n\n\n\n\nPlot abiotic - all years\n\nSiddarth\n\n\n\nCode\nhead(combined_biol_metadata)\n\n\n# A tibble: 6 × 34\n  day       YY    MM    DD    hh    mm  WDIR  WSPD   MWD  PRES  ATMP  WTMP  TIDE\n  &lt;chr&gt;  &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;int&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n2 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n3 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n4 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n5 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n6 2008-…  2008     1     1     0     0    52   3.2   999 1019.  17.4  16.6  0.89\n# ℹ 21 more variables: DAY &lt;dttm&gt;, MONTH &lt;dbl&gt;, HOUR &lt;int&gt;, DATE &lt;date&gt;,\n#   CELL_ID &lt;chr&gt;, CARBON &lt;dbl&gt;, COURSE_CLASSIFICATION &lt;chr&gt;, TYPE &lt;chr&gt;,\n#   Domain &lt;chr&gt;, Supergroup &lt;chr&gt;, Phylum &lt;chr&gt;, Class &lt;chr&gt;, Order &lt;chr&gt;,\n#   Family &lt;chr&gt;, Genus &lt;chr&gt;, Species &lt;chr&gt;, COUNT &lt;dbl&gt;, SEASON &lt;chr&gt;,\n#   START &lt;date&gt;, END &lt;date&gt;, DAY_NOYEAR &lt;date&gt;\n\n\nCode\nplot_abiotic &lt;- combined_biol_metadata %&gt;% \n  select(DATE, SEASON, WDIR, WSPD, PRES, ATMP, WTMP, TIDE, DAY_NOYEAR)\n\n\n\n\nPlot abiotic - one year\n\nSiddarth"
  },
  {
    "objectID": "ifcb-data-wrangle.html#all-daily",
    "href": "ifcb-data-wrangle.html#all-daily",
    "title": "ifcb-port aransas",
    "section": "5.1 All daily",
    "text": "5.1 All daily\nLook at by hour and season for different supergroups.\n\n\nCode\ncombined_biol_metadata |&gt; \n  filter(COURSE_CLASSIFICATION == \"Microeukaryote\") %&gt;% \n  filter(Phylum != \"Cnidaria\") %&gt;% \n  # Remove any zeroes\n  filter(COUNT &gt; 0 | is.na(COUNT)) %&gt;% \n  # Get average for a given hour in the same month and season for an individual day.\n  group_by(HOUR, SEASON, Supergroup, Phylum) %&gt;% \n    summarise(MEAN_COUNT_DAILY = mean(COUNT),\n              MAX_COUNT_DAILY = max(COUNT),\n              MIN_COUNT_DAILY = min(COUNT)) %&gt;% \n  ggplot(aes(x = (HOUR), y = MEAN_COUNT_DAILY, color = SEASON)) +\n    geom_path(aes(group = Phylum)) +\n    geom_point(shape = 19) +\n    facet_grid(rows = vars(Supergroup), cols = vars(SEASON), scales = \"free\") +\n  theme_classic() +\n  scale_color_manual(values = c(\"#cc5500\",\"#bccbae\",\"#ffbf00\",\"#5d4e62\")) +\n  scale_y_log10() +\n  labs(x = \"\", y = bquote(\"log cell\"~ml^-1)) +\n  theme(legend.position = \"bottom\", legend.title = element_blank(),\n        axis.text.x = element_text(color = \"black\", face = \"bold\", size = 10),\n        axis.title = element_text(color = \"black\", face = \"bold\", size = 11),\n        axis.text.y = element_text(color = \"black\", face = \"bold\", size = 10),\n        panel.grid.major = element_line(color = \"#d9d9d9\", linewidth = 0.3))\n\n\n`summarise()` has grouped output by 'HOUR', 'SEASON', 'Supergroup'. You can\noverride using the `.groups` argument.\n\n\n\n\n\n\n\n\n\nEach line represents a phylum, so there are some withe more variability than others. We also know that cell types are not equally represented across the supergroups in the IFCB data, therefore, we need to focus on the stramenopiles and alveolata vs. other supergroups.\n\n\nCode\nalv_stram &lt;- c(\"Stramenopiles\", \"Alveolata\")\n# counts_long_wtax_wseason\ncombined_biol_metadata |&gt; \n  filter(COURSE_CLASSIFICATION == \"Microeukaryote\") %&gt;% \n  filter(Phylum != \"Cnidaria\") %&gt;% \n  filter(!(Supergroup %in% alv_stram)) %&gt;% \n  # Remove any zeroes\n  filter(COUNT &gt; 0 | is.na(COUNT)) %&gt;% \n  # Get average for a given hour in the same month and season for an individual day.\n  group_by(HOUR, SEASON, Supergroup, Phylum, CELL_ID) %&gt;% \n    summarise(MEAN_COUNT_DAILY = mean(COUNT),\n              MAX_COUNT_DAILY = max(COUNT),\n              MIN_COUNT_DAILY = min(COUNT)) %&gt;% \n  ggplot(aes(x = (HOUR), y = MEAN_COUNT_DAILY, color = SEASON)) +\n    geom_path(aes(group = CELL_ID)) +\n    geom_point(shape = 19) +\n    facet_grid(rows = vars(Supergroup), cols = vars(SEASON), scales = \"free\") +\n  theme_classic() +\n  scale_color_manual(values = c(\"#cc5500\",\"#bccbae\",\"#ffbf00\",\"#5d4e62\")) +\n  scale_y_log10() +\n  labs(x = \"\", y = bquote(\"log cell\"~ml^-1)) +\n  theme(legend.position = \"bottom\", legend.title = element_blank(),\n        axis.text.x = element_text(color = \"black\", face = \"bold\", size = 10),\n        axis.title = element_text(color = \"black\", face = \"bold\", size = 11),\n        axis.text.y = element_text(color = \"black\", face = \"bold\", size = 10),\n        panel.grid.major = element_line(color = \"#d9d9d9\", linewidth = 0.3))\n\n\n`summarise()` has grouped output by 'HOUR', 'SEASON', 'Supergroup', 'Phylum'.\nYou can override using the `.groups` argument."
  },
  {
    "objectID": "ifcb-data-wrangle.html#ochrophyta",
    "href": "ifcb-data-wrangle.html#ochrophyta",
    "title": "ifcb-port aransas",
    "section": "6.1 Ochrophyta",
    "text": "6.1 Ochrophyta\nDiatoms\n\nCell counts over the entire dataset.\nMean, min, max for each day / week / month?\ncarbon per cell\nDiversity over time\n\nAnalyses: PCA or CCA plot"
  },
  {
    "objectID": "ifcb-data-wrangle.html#temperature-by-year",
    "href": "ifcb-data-wrangle.html#temperature-by-year",
    "title": "ifcb-port aransas",
    "section": "9.1 Temperature by year",
    "text": "9.1 Temperature by year\n\n\nCode\n# ocean_data_dfs_long |&gt; \n#   filter(VARIABLE == \"TEMP_degC\") |&gt; \n#   filter(VALUE &lt; 99) |&gt; \n#   mutate(YEAR = as.character(YEAR)) |&gt; \n#   group_by(YEAR, date, GRAPH_DATE) |&gt; \n#     summarise(TEMP_MEAN = mean(VALUE),\n#               TEMP_MIN = min(VALUE),\n#               TEMP_MAX = max(VALUE)) |&gt; \n#   ggplot(aes(x = GRAPH_DATE, y = TEMP_MEAN, group = YEAR, color = YEAR)) +\n#   scale_x_date(labels = scales::date_format(\"%m/%d\")) +\n#   geom_point(shape = 16, size = 2) +\n#   geom_errorbar(aes(x = GRAPH_DATE, ymin = TEMP_MIN, ymax = TEMP_MAX)) +\n#   scale_color_brewer(palette = \"Set2\") +\n#   theme_classic() +\n#   theme(\n#     axis.text.x = element_text(angle = 0, face = \"bold\", color = \"black\", hjust = 0.5, vjust = 1, size = 24),\n#     axis.text.y = element_text(color = \"black\", face = \"bold\", size = 24),\n#     axis.title = element_text(color = \"black\", face = \"bold\", size = 24)) +\n#   labs(x = \"Date\", y = \"Temperature °C\")"
  },
  {
    "objectID": "ifcb-data-wrangle.html#visualize-environmental-data",
    "href": "ifcb-data-wrangle.html#visualize-environmental-data",
    "title": "ifcb-port aransas",
    "section": "9.2 Visualize environmental data",
    "text": "9.2 Visualize environmental data"
  }
]