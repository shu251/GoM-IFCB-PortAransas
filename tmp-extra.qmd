---
title: "Untitled"
editor: visual
---
# Plot all years of data

```{r}
load(file = "output-data/data_annotated_wtax_wseason.RData")
```

### Plot all classifications

```{r}
head(counts_long_wtax_wseason)
# range(counts_long_wtax_wseason$DAY)
```


```{r}
counts_long_wtax_wseason |>
  # Remove any zeroes
  filter(COUNT > 0) |> 
  # Get date, average across years
  group_by(DAY, COURSE_CLASSIFICATION, SEASON) |> 
    summarise(SUM_COUNTS = sum(COUNT)) %>% 
  #
  ggplot(aes(x = DAY, y = SUM_COUNTS, fill = COURSE_CLASSIFICATION)) + 
  geom_area(position = "stack") +
  theme_classic() +
  scale_x_date(date_labels = "%b", expand = c(0,0)) +
  scale_y_continuous(expand = c(0,0)) +
  labs(x = "", y = "Cell counts") +
  theme(legend.position = "bottom", legend.title = element_blank(),
        axis.text.x = element_text(color = "black", face = "bold", size = 12),
        axis.text.y = element_text(color = "black", face = "bold", size = 12)) +
  geom_rect(xmin = as_date("2024-09-01"), xmax = as_date("2024-11-30"), ymin = (YMAX + 20), ymax = (YMAX + 40), alpha = 0.2, fill = "#cc5500") +
  geom_rect(xmin = as_date("2024-03-01"), xmax = as_date("2024-5-31"), ymin = (YMAX + 20), ymax = (YMAX + 40), alpha = 0.2, fill = "#bccbae") +
  geom_rect(xmin = as_date("2024-06-01"), xmax = as_date("2024-08-31"), ymin = (YMAX + 20), ymax = (YMAX + 40), alpha = 0.2, fill = "#ffbf00") +
  geom_rect(xmin = as_date("2024-12-01"), xmax = as_date("2024-12-31"), ymin = (YMAX + 20), ymax = (YMAX + 40), alpha = 0.2, fill = "#5d4e62") +
  geom_rect(xmin = as_date("2024-01-01"), xmax = as_date("2024-02-29"), ymin = (YMAX + 20), ymax = (YMAX + 40), alpha = 0.2, fill = "#5d4e62")
#Spring = March 1 - May 31 
#Summer = June 1 - Aug 31 
#Fall = Sept 1 - Nov 30 
#Winter = Dec 1 - Feb (March 1 (-1))
```


```{r}
df_classification_C <- carbon_long_wtax_wseason |> 
  filter(COURSE_CLASSIFICATION == "Microeukaryote") %>% 
  # Remove any zeroes
  filter(CARBON > 0) |> 
  # Get date, average across years
  group_by(DAY_NOYEAR, Supergroup, SEASON) |> 
    summarise(MEAN_CARBON = mean(CARBON))

carbon_1yr_euk <- ggplot(df_classification_C, aes(x = DAY_NOYEAR, y = MEAN_CARBON, fill = Supergroup)) + 
  geom_area(position = "stack") +
  theme_classic() +
  scale_x_date(date_labels = "%b", expand = c(0,0)) +
  scale_y_continuous(expand = c(0,0)) +
  labs(x = "", y = "Carbon biomass") +
  theme(legend.position = "bottom", legend.title = element_blank(),
        axis.text.x = element_text(color = "black", face = "bold", size = 12),
        axis.text.y = element_text(color = "black", face = "bold", size = 12))
```

```{r, fig.height=7, fig.width=7}
(cell_counts_1yr_euk + theme(legend.position = "none")) + carbon_1yr_euk + patchwork::plot_layout(nrow = 2)
```


### Plot micro info

```{r}
head(counts_long_wtax_wseason)
# unique(counts_long_wtax_wseason$Supergroup)
```

```{r}
df_micro_all <- counts_long_wtax_wseason |> 
  # Remove any zeroes
  filter(COUNT > 0) |> 
  filter(COURSE_CLASSIFICATION %in% c("Microeukaryote", "Cyanobacteria", "Bacteria")) |> 
  # Get date, average across years
  group_by(DAY_NOYEAR, COURSE_CLASSIFICATION, Domain, SEASON) |> 
    summarise(MEAN_COUNTS = mean(COUNT))

YMAX <- max(df_micro_all$MEAN_COUNTS)

ggplot(df_micro_all, aes(x = DAY_NOYEAR, y = MEAN_COUNTS, fill = Domain)) + 
  geom_area(position = "fill") +
  theme_classic() +
  scale_x_date(date_labels = "%b", expand = c(0,0)) +
  # scale_y_continuous(expand = c(0,0), limits = c(0,1)) +
  labs(x = "", y = "Cell counts") +
  theme(legend.position = "bottom", legend.title = element_blank(),
        axis.text.x = element_text(color = "black", face = "bold", size = 12),
        axis.text.y = element_text(color = "black", face = "bold", size = 12)) 

+
  geom_rect(xmin = as_date("2024-09-01"), xmax = as_date("2024-11-30"), ymin = -0.1, ymax = 0, alpha = 0.2, fill = "#cc5500") +
  geom_rect(xmin = as_date("2024-03-01"), xmax = as_date("2024-5-31"), ymin = 0, ymax = 0.01, alpha = 0.2, fill = "#bccbae") +
  geom_rect(xmin = as_date("2024-06-01"), xmax = as_date("2024-08-31"), ymin = 0, ymax = 0.01, alpha = 0.2, fill = "#ffbf00") +
  geom_rect(xmin = as_date("2024-12-01"), xmax = as_date("2024-12-31"), ymin = 0, ymax = 0.01, alpha = 0.2, fill = "#5d4e62") +
  geom_rect(xmin = as_date("2024-01-01"), xmax = as_date("2024-02-29"), ymin = 0, ymax = 0.01, alpha = 0.2, fill = "#5d4e62")
#Spring = March 1 - May 31 
#Summer = June 1 - Aug 31 
#Fall = Sept 1 - Nov 30 
#Winter = Dec 1 - Feb (March 1 (-1))
```

#### Microeukaryotes only

```{r, fig.height=6, fig.width=15}
df_microeuk_all <- counts_long_wtax_wseason |> 
  # Remove any zeroes
  filter(COUNT > 0) |> 
  filter(COURSE_CLASSIFICATION == "Microeukaryote") |> 
  # Get date, average across years
  group_by(DAY_NOYEAR, Phylum) |> 
    summarise(MEAN_COUNTS = mean(COUNT)) |> #Mean across year
  ungroup() |> 
  group_by(DAY_NOYEAR) |> 
  mutate(RELABUN = MEAN_COUNTS/(sum(MEAN_COUNTS)))

range(df_microeuk_all$RELABUN)

ggplot(df_microeuk_all, aes(x = DAY_NOYEAR, y = RELABUN, fill = Phylum)) + 
  geom_area(position = "stack", color = "black", width=0.1) +
  theme_classic() +
  scale_x_date(date_labels = "%b", expand = c(0,0)) +
  scale_fill_manual(values = c("#7FB7BE","#70EE9C", "#DACC3E", "#BC2C1A", "#C7EFCF", "#434371", "#DD7373", "#D1D1D1","#B5F44A",  "#F75C03", "#434371", "#D90368", "#00CC66", "#2274A5")) +
  # scale_y_continuous(expand = c(0,0), limits = c(0,1)) +
  labs(x = "", y = "Cell counts") +
  theme(legend.position = "bottom", legend.title = element_blank(),
        axis.text.x = element_text(color = "black", face = "bold", size = 12),
        axis.text.y = element_text(color = "black", face = "bold", size = 12)) +
  geom_rect(xmin = as_date("2024-09-01"), xmax = as_date("2024-11-30"), ymin = -0.1, ymax = 0, alpha = 0.2, fill = "#cc5500") +
  geom_rect(xmin = as_date("2024-03-01"), xmax = as_date("2024-5-31"), ymin = -0.1, ymax = 0, alpha = 0.2, fill = "#bccbae") +
  geom_rect(xmin = as_date("2024-06-01"), xmax = as_date("2024-08-31"), ymin = -0.1, ymax = 0, alpha = 0.2, fill = "#ffbf00") +
  geom_rect(xmin = as_date("2024-12-01"), xmax = as_date("2024-12-31"), ymin = -0.1, ymax = 0, alpha = 0.2, fill = "#5d4e62") +
  geom_rect(xmin = as_date("2024-01-01"), xmax = as_date("2024-02-29"), ymin = -0.1, ymax = 0, alpha = 0.2, fill = "#5d4e62")

```

> remake the above, but as density or area plots for all years... 1 taxa per row?

```{r}
head(counts_long_wtax_wseason)
```

```{r}
head(counts_long_wtax_wseason)
unique(counts_long_wtax_wseason$Phylum)
of_interest <- c("Dinoflagellate", "Ochrophyta")
```

```{r, fig.height=18, fig.width=12}
df_microeuk_years <- counts_long_wtax_wseason |> 
  # Remove any zeroes
  filter(COUNT > 0) |> 
  filter(COURSE_CLASSIFICATION == "Microeukaryote") |> 
  filter(Phylum %in% of_interest) |> 
  # Get date, average across years
  group_by(DATE, Phylum, Class, SEASON, START, END) |> 
    summarise(MEAN_COUNTS = mean(COUNT)) |> #Mean across year
  ungroup() |> 
  group_by(DATE) |> 
  mutate(RELABUN = MEAN_COUNTS/(sum(MEAN_COUNTS)))

range(df_microeuk_years$RELABUN)
range(df_microeuk_years$DATE)

ggplot(df_microeuk_years, aes(x = DATE, y = MEAN_COUNTS, fill = Class)) + 
  geom_area(position = "stack", color = "black") +
  theme_classic() +
  scale_x_date(date_labels = "%b", expand = c(0,0)) +
  scale_fill_manual(values = c("#7FB7BE","#70EE9C", "#DACC3E", "#BC2C1A", "#C7EFCF", "#434371", "#DD7373", "#D1D1D1","#B5F44A",  "#F75C03", "#434371", "#D90368", "#00CC66", "#2274A5")) +
  facet_grid(rows = vars(Phylum), scales = "free") +
  labs(x = "", y = "Cell counts") +
  theme(legend.position = "bottom", legend.title = element_blank(),
        axis.text.x = element_text(color = "black", face = "bold", size = 12),
        axis.text.y = element_text(color = "black", face = "bold", size = 12)) +
  geom_rect(data = (filter(df_microeuk_years, SEASON == "Fall")), alpha = 0.2, fill = "#cc5500",
            aes(xmin = START, xmax = END, ymin = 0, ymax = 1)) +
  geom_rect(data = (filter(df_microeuk_years, SEASON == "Spring")), alpha = 0.2, fill = "#bccbae",
            aes(xmin = START, xmax = END, ymin = 0, ymax = 1)) +
  geom_rect(data = (filter(df_microeuk_years, SEASON == "Summer")), alpha = 0.2, fill = "#ffbf00",
            aes(xmin = START, xmax = END, ymin = 0, ymax = 1)) +
  geom_rect(data = (filter(df_microeuk_years, SEASON == "Winter")), alpha = 0.2, fill = "#5d4e62",
            aes(xmin = START, xmax = END, ymin = 0, ymax = 1))

```

```{r}
count_seg <- counts_long_wtax_wseason %>%
  pivot_longer(cols = -c(DAY, MONTH, HOUR), names_to = "CELL_ID", values_to = "COUNT") %>%
  group_by(DAY) %>% 
    summarise(COUNT_TOTAL = sum(COUNT)) %>% 
  mutate(DATA_GAP = case_when(
    is.na(COUNT_TOTAL) ~ "Missing",
    TRUE ~ "Not missing"
  ),
  COUNT_ACTUAL = case_when(
    is.na(COUNT_TOTAL) ~ max(COUNT_TOTAL),
    TRUE ~ COUNT_TOTAL
  )) |> 
  ggplot(aes(x = DAY)) +
      geom_rect(data = (filter(df_season, SEASON == "Fall")), alpha = 0.2, fill = "#cc5500",
                aes(xmin = START, xmax = END, ymin = 9000, ymax = 15000)) +
      geom_rect(data = (filter(df_season, SEASON == "Spring")), alpha = 0.2, fill = "#bccbae",
                aes(xmin = START, xmax = END, ymin = 9000, ymax = 15000)) +
      geom_rect(data = (filter(df_season, SEASON == "Summer")), alpha = 0.2, fill = "#ffbf00",
                aes(xmin = START, xmax = END, ymin = 9000, ymax = 15000)) +
      geom_rect(data = (filter(df_season, SEASON == "Winter")), alpha = 0.2, fill = "#5d4e62",
                aes(xmin = START, xmax = END, ymin = 9000, ymax = 15000)) +
    geom_segment(data = karenia, aes(x = DAY, xend = DAY, y = 0, yend = 7999), lwd = 0.1, color = "red", alpha = 0.6) +
    # geom_segment(aes(x = DAY, xend = DAY, y = 0, yend = COUNT_ACTUAL, color = DATA_GAP), lwd = 0.1, color = "#252525") +
    geom_point(aes(x = DAY, y = COUNT_ACTUAL, color = DATA_GAP), shape = 20, color = "#252525", size = 0.8) +
  scale_y_log10(position = "left") +
  scale_x_date(expand = c(0,0)) +
  theme_classic() +
  labs(x = "", y = bquote("Cells"~ml^-1)) +
  theme(axis.text = element_text(size = 12, color = "black", face = "bold"),
        axis.title = element_text(size = 13, color = "black", face = "bold"))
count_seg
```

### Plot carbon value for all data

```{r}
carbon_seg <- carbon %>%
  pivot_longer(cols = -c(DAY), names_to = "CELL_ID", values_to = "C") %>%
  group_by(DAY) %>% 
    summarise(C_TOTAL = sum(C)) %>% 
  mutate(DATA_GAP = case_when(
    is.na(C_TOTAL) ~ "Missing",
    TRUE ~ "Not missing"
  ),
  C_ACTUAL = case_when(
    is.na(C_TOTAL) ~ max(C_TOTAL),
    TRUE ~ C_TOTAL
  )) %>%
  ggplot(aes(x = DAY, y = C_ACTUAL)) +
    # geom_segment(aes(x = DAY, xend = DAY, y = 0, yend = C_ACTUAL),lwd = 0.1, color = "#bdbdbd") +
  geom_point(shape = 4, size = 0.7, color = "black") + 
  # scale_y_log10(limits = c(1E+01,1E+10)) +
  scale_y_log10(position = "right", limits = c(1E+02, 1E+10)) +
  scale_x_date(expand = c(0,0)) +
  theme_classic() +
  labs(x = "", y = bquote("Carbon"~ml^-1)) +
  theme(axis.text = element_text(size = 12, color = "black", face = "bold"),
        axis.title = element_text(size = 13, color = "black", face = "bold"))
carbon_seg  
```

Combine plots for dual axis

```{r, fig.height=9, fig.width=10}
count_seg + carbon_seg + patchwork::plot_layout(nrow = 2)
ggsave("figures/cell_carbon_2panel_points.svg", width = 10, height = 9, units = "in")
```

## Pull metadata for Gulf of Mexico

```{r}
# install.packages("rnoaa", force = TRUE)
```

```{r}
```

## *Karena* example

Making a new dataframe with only seasons, data gaps, and Karenia notifications

```{r}
karenia <- counts |> 
  pivot_longer(cols = -c(DAY), names_to = "CELL_ID", values_to = "COUNT") %>%
  mutate(KARENIA = case_when(
    (grepl("Karenia", CELL_ID) & COUNT > 2) ~ "Notification",
    TRUE ~ "No alert"
  )) |> 
  filter(KARENIA == "Notification") |> 
  # arrange(desc(KARENIA)) |> 
  select(DAY, KARENIA) |> distinct()
# 366 total notifications sent out.
# length(karenia$DAY)
# length(unique(karenia$DAY))

# Make character list
karenia_note <- as.character(as.Date(karenia$DAY))
```

# Periodicity

*Lomb-Scargle Periodogram*

## Seasonality

*NEXT* \* filter by cell types \* remove IFCB excess stuff \* Look at annual trends overall

Look at overall seasonal trends by critical taxa

```{r}
compiled_df <- counts %>% 
  pivot_longer(cols = -c(DAY), names_to = "CELL_ID", values_to = "COUNT") %>% 
    left_join(carbon %>% 
      pivot_longer(cols = -c(DAY), names_to = "CELL_ID", values_to = "CARBON")) |> 
  left_join(df_season) |> select(-START, -END)
```

### Plot what a single day looks like IN each month

```{r}
# unique(compiled_df$CELL_ID)
rm <- c("blurry", "bubble", "detritus", "Beads", "unclassified")
```

With daily counts only.

```{r, fig.height=4, fig.width=14}
# Factor months
season_order <- c("Winter", "Spring", "Summer", "Fall")
season_color <- c("#5d4e62", "#bccbae", "#ffbf00", "#cc5500")

compiled_df %>% 
  filter(grepl("Prorocentrum", CELL_ID) | grepl("Chaetoceros", CELL_ID)) %>% 
  drop_na() |> 
  group_by(SEASON, DAY, CELL_ID) %>% 
  summarise(COUNT_SUM = sum(COUNT),
            CARBON_SUM = sum(CARBON),
            CARBON_per_CELL = CARBON_SUM/COUNT_SUM) %>%
  mutate(SEASON_ORDER = factor(SEASON, levels = season_order)) |> 
  ggplot(aes(x = SEASON_ORDER, y = COUNT_SUM, group = SEASON_ORDER)) +
    geom_jitter(width = 0.1, size = 0.4, shape = 20, aes(color = SEASON_ORDER)) +
    geom_boxplot(width = 0.5, alpha = 0.6, aes(fill = SEASON_ORDER)) + 
    scale_color_manual(values = season_color) +
    scale_fill_manual(values = season_color) +
    scale_y_log10() +
    facet_grid(cols = vars(CELL_ID), scales = "free", space = "free") +
  theme_classic() +
  labs(x = "", y = bquote("Cell"~ml^-1)) +
  theme(axis.text = element_text(size = 12, color = "black", face = "bold"),
        axis.title = element_text(size = 13, color = "black", face = "bold"))
```

Carbon per day

```{r, fig.height=4, fig.width=14}
# Factor months
season_order <- c("Winter", "Spring", "Summer", "Fall")
season_color <- c("#5d4e62", "#bccbae", "#ffbf00", "#cc5500")

compiled_df %>% 
  filter(grepl("Prorocentrum", CELL_ID) | grepl("Chaetoceros", CELL_ID)) %>% 
  drop_na() |> 
  group_by(SEASON, DAY, CELL_ID) %>% 
  summarise(COUNT_SUM = sum(COUNT),
            CARBON_SUM = sum(CARBON),
            CARBON_per_CELL = CARBON_SUM/COUNT_SUM) %>%
  mutate(SEASON_ORDER = factor(SEASON, levels = season_order)) |> 
  ggplot(aes(x = SEASON_ORDER, y = CARBON_SUM, group = SEASON_ORDER)) +
    geom_jitter(width = 0.1, size = 0.4, shape = 20, aes(color = SEASON_ORDER)) +
    geom_boxplot(width = 0.5, alpha = 0.6, aes(fill = SEASON_ORDER)) + 
    scale_color_manual(values = season_color) +
    scale_fill_manual(values = season_color) +
    scale_y_log10() +
    facet_grid(cols = vars(CELL_ID), scales = "free", space = "free") +
  theme_classic() +
  labs(x = "", y = bquote("Carbon"~ml^-1)) +
  theme(axis.text = element_text(size = 12, color = "black", face = "bold"),
        axis.title = element_text(size = 13, color = "black", face = "bold"))
```

```{r, fig.height=4, fig.width=14}
# Factor months
season_order <- c("Winter", "Spring", "Summer", "Fall")
season_color <- c("#5d4e62", "#bccbae", "#ffbf00", "#cc5500")

compiled_df %>% 
  filter(grepl("Prorocentrum", CELL_ID) | grepl("Chaetoceros", CELL_ID)) %>% 
  drop_na() |> 
  group_by(SEASON, DAY, CELL_ID) %>% 
  summarise(COUNT_SUM = sum(COUNT),
            CARBON_SUM = sum(CARBON),
            CARBON_per_CELL = CARBON_SUM/COUNT_SUM) %>%
  mutate(SEASON_ORDER = factor(SEASON, levels = season_order)) |> 
  ggplot(aes(x = SEASON_ORDER, y = CARBON_per_CELL, group = SEASON_ORDER)) +
    geom_jitter(width = 0.1, size = 0.4, shape = 20, aes(color = SEASON_ORDER)) +
    geom_boxplot(width = 0.5, alpha = 0.6, aes(fill = SEASON_ORDER)) + 
    scale_color_manual(values = season_color) +
    scale_fill_manual(values = season_color) +
    scale_y_log10() +
    facet_grid(cols = vars(CELL_ID), scales = "free", space = "free") +
  theme_classic() +
  labs(x = "", y = bquote("Carbon"~cell^-1)) +
  theme(axis.text = element_text(size = 12, color = "black", face = "bold"),
        axis.title = element_text(size = 13, color = "black", face = "bold"))
```

## Plot carbon per cell overall

```{r}
season_order <- c("Winter", "Spring", "Summer", "Fall")
season_color <- c("#5d4e62", "#bccbae", "#ffbf00", "#cc5500")

compiled_df %>% 
  drop_na() |> 
  filter(!(CELL_ID %in% rm)) |> 
  group_by(SEASON, DAY) %>% 
  summarise(COUNT_SUM = sum(COUNT),
            CARBON_SUM = sum(CARBON),
            CARBON_per_CELL = CARBON_SUM/COUNT_SUM) %>%
  mutate(SEASON_ORDER = factor(SEASON, levels = season_order)) |> 
  mutate(date_tmp =  as.Date(format(DAY, '2024-%m-%d'))) |> 
  ggplot(aes(x = date_tmp, y = CARBON_per_CELL, color = SEASON_ORDER)) +
    geom_line() +
  scale_color_manual(values = season_color) +
  scale_y_log10() + 
  coord_polar() +
  theme_void() +
  theme(axis.text = element_text(size = 12, color = "black", face = "bold"),
        legend.position = "none",
        panel.grid.major =  element_line(color = "grey")) +
    labs(x = "", title = bquote("Carbon"~cell^-1))
```

*Repeat this plot for cells overall* *Individual taxa too*

```{r}
season_order <- c("Winter", "Spring", "Summer", "Fall")
season_color <- c("#5d4e62", "#bccbae", "#ffbf00", "#cc5500")

compiled_df %>% 
  drop_na() |> 
  filter(!(CELL_ID %in% rm)) |> 
  group_by(SEASON, DAY) %>% 
  summarise(COUNT_SUM = sum(COUNT),
            CARBON_SUM = sum(CARBON),
            CARBON_per_CELL = CARBON_SUM/COUNT_SUM) %>%
  mutate(SEASON_ORDER = factor(SEASON, levels = season_order)) |> 
  mutate(date_tmp =  as.Date(format(DAY, '2024-%m-%d'))) |> 
  mutate(MONTH = month(date_tmp)) |> 
  ggplot(aes(x = date_tmp, y = CARBON_per_CELL, color = SEASON_ORDER)) +
    geom_point() +
  scale_color_manual(values = season_color) +
  scale_y_log10() + 
  scale_x_date(expand = c(0,0)) +
  theme_classic() +
  labs(x = "", y = bquote("Cells"~ml^-1)) +
  theme(axis.text = element_text(size = 12, color = "black", face = "bold"),
        axis.title = element_text(size = 13, color = "black", face = "bold"),
        legend.position = "bottom", legend.title = element_blank())
```

### Diatoms

```{r}
unique(compiled_df$CELL_ID)
diatom <- c("Pseudonitzschia", "pennate_rod", "Centric", "Cylindrotheca", "Thalassiosira", "Chaetoceros")
```

```{r}
compiled_df %>% 
  drop_na() |> 
  filter(!(CELL_ID %in% rm)) |> 
  filter(CELL_ID == "Pseudonitzschia") |> 
  group_by(SEASON, DAY) %>% 
  summarise(COUNT_SUM = sum(COUNT),
            CARBON_SUM = sum(CARBON),
            CARBON_per_CELL = CARBON_SUM/COUNT_SUM) %>%
  mutate(SEASON_ORDER = factor(SEASON, levels = season_order)) |> 
  mutate(date_tmp =  as.Date(format(DAY, '2024-%m-%d'))) |> 
  ggplot(aes(x = date_tmp, y = CARBON_per_CELL, color = SEASON_ORDER)) +
    geom_line() +
  scale_color_manual(values = season_color) +
  scale_y_log10() + 
  coord_polar() +
  theme_void() +
  theme(axis.text = element_text(size = 12, color = "black", face = "bold"),
        legend.position = "none",
        panel.grid.major =  element_line(color = "grey")) +
    labs(x = "", title = bquote("Carbon"~cell^-1))
```


# Diel

What does diel cycle look for individual seasons? *Waiting for hourly values*

# Time-series model

```{r}
# install.packages("modeltime")
# install.packages("tidymodels")
# install.packages("timetk")
library(tidymodels)
library(timetk)
library(tidyverse)
```
